{"version":3,"sources":["webpack:///./node_modules/_vant@1.6.19@vant/es/slider/index.js","webpack:///src/pages/User/cropper.vue","webpack:///./src/pages/User/cropper.vue?4a5c","webpack:///./src/pages/User/cropper.vue","webpack:///./node_modules/_cropperjs@1.5.2@cropperjs/dist/cropper.js"],"names":["_use","Object","utils","sfc","bem","es_slider","mixins","touch","props","min","Number","value","disabled","Boolean","vertical","activeColor","String","inactiveColor","max","type","default","step","barHeight","methods","onTouchStart","event","this","touchStart","startValue","format","onTouchMove","utils_event","touchMove","rect","$el","getBoundingClientRect","diff","deltaY","deltaX","height","width","newValue","updateValue","onTouchEnd","onClick","stopPropagation","clientY","top","clientX","left","end","$emit","Math","round","render","h","_barStyle","style","background","crossAxis","barStyle","class","on","click","touchstart","touchmove","touchend","touchcancel","slots","User_cropper","data","cropper","image","val","components","vanSlider","computed","angle","clip","zhi","getCroppedCanvas","toDataURL","rotation","rotateTo","cancel","mounted","$refs","dist_cropper_default","a","aspectRatio","viewMode","dragMode","preview","crop","pages_User_cropper","_vm","_h","$createElement","_c","_self","staticClass","ref","attrs","id","src","imgsrc","_v","_s","active-color","change","model","callback","$$v","expression","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","factory","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","IS_BROWSER","window","WINDOW","IS_TOUCH_DEVICE","document","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","initialAspectRatio","NaN","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","zoom","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","forEach","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","REGEXP_SUFFIX","setStyle","element","styles","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","pageXOffset","clientLeft","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","endX","endY","startX","startY","getAdjustedSizes","_ref4","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","maxHeight","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","initPreview","crossOrigin","crossOriginUrl","createElement","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","wheelDelta","buttons","button","ctrlKey","action","pointers","changedTouches","identifier","pointerId","originalEvent","cropping","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","b","getMaxZoomRatio","p","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","xhr","XMLHttpRequest","clone","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","module","exports"],"mappings":"uLAIAA,EAAWC,OAAAC,EAAA,EAAAD,CAAG,UACdE,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAEeK,EAAAF,GACfG,QAAWC,EAAA,GACXC,OACAC,IAAAC,OACAC,MAAAD,OACAE,SAAAC,QACAC,SAAAD,QACAE,YAAAC,OACAC,cAAAD,OACAE,KACAC,KAAAT,OACAU,QAAA,KAEAC,MACAF,KAAAT,OACAU,QAAA,GAEAE,WACAH,KAAAH,OACAI,QAAA,QAGAG,SACAC,aAAA,SAAAC,GACAC,KAAAd,WACAc,KAAAC,WAAAF,GACAC,KAAAE,WAAAF,KAAAG,OAAAH,KAAAf,SAEAmB,YAAA,SAAAL,GAEA,GADMxB,OAAA8B,EAAA,EAAA9B,CAAcwB,GAAA,IACpBC,KAAAd,SAAA,CACAc,KAAAM,UAAAP,GACA,IAAAQ,EAAAP,KAAAQ,IAAAC,wBAGAC,GAFAV,KAAAZ,SAAAY,KAAAW,OAAAX,KAAAY,SACAZ,KAAAZ,SAAAmB,EAAAM,OAAAN,EAAAO,OACA,IACAd,KAAAe,SAAAf,KAAAE,WAAAQ,EACAV,KAAAgB,YAAAhB,KAAAe,YAEAE,WAAA,WACAjB,KAAAd,UACAc,KAAAgB,YAAAhB,KAAAe,UAAA,IAEAG,QAAA,SAAAnB,GAEA,GADAA,EAAAoB,mBACAnB,KAAAd,SAAA,CACA,IAAAqB,EAAAP,KAAAQ,IAAAC,wBAGAxB,GAFAe,KAAAZ,SAAAW,EAAAqB,QAAAb,EAAAc,IAAAtB,EAAAuB,QAAAf,EAAAgB,OACAvB,KAAAZ,SAAAmB,EAAAM,OAAAN,EAAAO,OACA,IACAd,KAAAgB,YAAA/B,GAAA,KAEA+B,YAAA,SAAA/B,EAAAuC,GACAvC,EAAAe,KAAAG,OAAAlB,GACAe,KAAAyB,MAAA,QAAAxC,GAEAuC,GACAxB,KAAAyB,MAAA,SAAAxC,IAGAkB,OAAA,SAAAlB,GACA,OAAAyC,KAAAC,MAAAD,KAAAlC,IAAAQ,KAAAjB,IAAA2C,KAAA3C,IAAAE,EAAAe,KAAAR,MAAAQ,KAAAL,MAAAK,KAAAL,OAGAiC,OAAA,SAAAC,GACA,IAAAC,EAEA1C,EAAAY,KAAAZ,SACA2C,GACAC,WAAAhC,KAAAT,eAGA0C,EAAA7C,EAAA,iBACA8C,IAAAJ,MAFA1C,EAAA,kBAEkCY,KAAAG,OAAAH,KAAAf,OAAA,IAAA6C,EAAAG,GAAAjC,KAAAJ,UAAAkC,EAAAE,WAAAhC,KAAAX,YAAAyC,GAClC,OAAAD,EAAA,OACAE,QACAI,MAAAzD,GACAQ,SAAAc,KAAAd,SACAE,aAEAgD,IACAC,MAAArC,KAAAkB,WAEKW,EAAA,OACLM,MAAAzD,EAAA,OACAqD,MAAAG,IACKL,EAAA,OACLM,MAAAzD,EAAA,kBACA0D,IACAE,WAAAtC,KAAAF,aACAyC,UAAAvC,KAAAI,YACAoC,SAAAxC,KAAAiB,WACAwB,YAAAzC,KAAAiB,cAEKjB,KAAA0C,MAAA,WAAAb,EAAA,OACLM,MAAAzD,EAAA,sDC1EAiE,GACA7D,OAAA,UACA8D,KAFA,WAGA,OACAC,QAAA,GACAC,MAAA,GACAC,IAAA,KAGAC,YACAC,UAAAtE,GAEAuE,UACAC,MADA,WAEA,WAAAnD,KAAA+C,IAAA,MAGAlD,SACAuD,KADA,WAEA,IAIAC,EAJArD,KAAA6C,QAAAS,kBACAxC,MAAA,IACAD,OAAA,MAEA0C,YACAvD,KAAAyB,MAAA,UAAA4B,IAEAG,SATA,SASAvE,GACAe,KAAA+C,IAAA9D,EACAe,KAAA6C,QAAAY,SAAAzD,KAAAmD,QAEAO,OAbA,WAcA1D,KAAAyB,MAAA,WAIAkC,QAAA,WACA3D,KAAA8C,MAAA9C,KAAA4D,MAAA,MACA5D,KAAA6C,QAAA,IAAAgB,EAAAC,EAAA9D,KAAA8C,OACAiB,YAAA,EACAC,SAAA,EACAC,SAAA,OAIAC,QAAA,SACAC,KARA,SAQApE,SCvEeqE,GADExC,OAFjB,WAA0B,IAAAyC,EAAArE,KAAasE,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,iBAA2BF,EAAA,OAAYE,YAAA,kBAA4BF,EAAA,OAAYG,IAAA,QAAAC,OAAmBC,GAAA,QAAAC,IAAAT,EAAAU,YAA+BV,EAAAW,GAAA,KAAAR,EAAA,OAA0BE,YAAA,mBAA6BF,EAAA,OAAYE,YAAA,UAAoBF,EAAA,MAAAH,EAAAW,GAAA,QAAAX,EAAAY,GAAAZ,EAAAlB,OAAA,OAAAkB,EAAAW,GAAA,KAAAR,EAAA,cAAgFI,OAAOjF,KAAA,EAAAuF,eAAA,UAAAnG,IAAA,EAAAS,IAAA,KAAoD4C,IAAK+C,OAAAd,EAAAb,UAAsB4B,OAAQnG,MAAAoF,EAAA,IAAAgB,SAAA,SAAAC,GAAyCjB,EAAAtB,IAAAuC,GAAYC,WAAA,UAAmB,GAAAlB,EAAAW,GAAA,KAAAR,EAAA,OAA4BE,YAAA,UAAoBL,EAAAW,GAAA,KAAAR,EAAA,OAAwBE,YAAA,iBAA2BF,EAAA,UAAeG,IAAA,SAAAvC,IAAiBC,MAAAgC,EAAAX,UAAoBW,EAAAW,GAAA,QAAAX,EAAAW,GAAA,KAAAR,EAAA,UAA0CG,IAAA,OAAAvC,IAAeC,MAAAgC,EAAAjB,QAAkBiB,EAAAW,GAAA,eAEzwBQ,oBCEjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEhD,EACAyB,GATF,EAXA,SAAAwB,GACEF,EAAQ,QACRA,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB;;;;;;;;;GCjBhC,IAAAK,IAIC,WAAoB,aAErB,SAAAC,EAAAC,GAWA,OATAD,EADA,mBAAAE,QAAA,iBAAAA,OAAAC,SACA,SAAAF,GACA,cAAAA,GAGA,SAAAA,GACA,OAAAA,GAAA,mBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAG,UAAA,gBAAAJ,IAIAA,GASA,SAAAK,EAAAC,EAAAxH,GACA,QAAAyH,EAAA,EAAmBA,EAAAzH,EAAA0H,OAAkBD,IAAA,CACrC,IAAAE,EAAA3H,EAAAyH,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACArI,OAAAsI,eAAAP,EAAAG,EAAAK,IAAAL,IAUA,SAAAM,EAAAC,GACA,OAGA,SAAAA,GACA,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAT,EAAA,EAAAY,EAAA,IAAAF,MAAAD,EAAAR,QAAmDD,EAAAS,EAAAR,OAAgBD,IAAAY,EAAAZ,GAAAS,EAAAT,GAEnE,OAAAY,GAPAC,CAAAJ,IAWA,SAAAK,GACA,GAAApB,OAAAC,YAAA3H,OAAA8I,IAAA,uBAAA9I,OAAA6H,UAAAkB,SAAAC,KAAAF,GAAA,OAAAJ,MAAAO,KAAAH,GAZAI,CAAAT,IAeA,WACA,UAAAU,UAAA,mDAhBAC,GAmBA,IAAAC,EAAA,oBAAAC,OACAC,EAAAF,EAAAC,UACAE,IAAAH,GAAA,iBAAAE,EAAAE,SAAAC,gBACAC,IAAAN,GAAA,iBAAAE,EAgBAK,EAAA,GAAAC,OAfA,UAeA,SACAC,EAAA,GAAAD,OAhBA,UAgBA,aACAE,EAAA,GAAAF,OAjBA,UAiBA,WACAG,EAAA,GAAAH,OAlBA,UAkBA,SACAI,EAAA,GAAAJ,OAnBA,UAmBA,cACAK,EAAA,GAAAL,OApBA,UAoBA,UACAM,EAAA,GAAAN,OArBA,UAqBA,SAEAO,EAAA,GAAAP,OAvBA,UAuBA,UACAQ,EAAA,GAAAR,OAxBA,UAwBA,WAcAS,EAAAX,EAAA,cAHAH,EAAA,yBAIAe,EAAAZ,EAAA,cAHAH,EAAA,wBAIAgB,EAAAb,EAAA,0BAHAH,EAAA,iCAWAiB,EAAA,2CACAC,EAAA,4BACAC,EAAA,gBAMAC,GAEAnF,SAAA,EAGAC,SAnCA,OAsCAmF,mBAAAC,IAEAtF,YAAAsF,IAEAzG,KAAA,KAEAsB,QAAA,GAEAoF,YAAA,EAEAC,SAAA,EAEAC,kBAAA,EAEAC,kBAAA,EAEAC,OAAA,EAEAC,QAAA,EAEAC,QAAA,EAEAC,WAAA,EAEA7H,YAAA,EAEA8H,UAAA,EAEAC,aAAA,GAEAC,SAAA,EAEAC,WAAA,EAEAC,UAAA,EAEAC,UAAA,EAEAC,aAAA,EAEAC,aAAA,EAEAC,eAAA,GAEAC,gBAAA,EAEAC,kBAAA,EAEAC,0BAAA,EAEAC,eAAA,EACAC,gBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,kBAAA,IACAC,mBAAA,IAEAC,MAAA,KACAC,UAAA,KACAC,SAAA,KACAC,QAAA,KACAhH,KAAA,KACAiH,KAAA,MASAC,EAAArM,OAAAqM,OAAAvD,EAAAuD,MAOA,SAAAC,EAAArM,GACA,uBAAAA,IAAAoM,EAAApM,GAQA,IAAAsM,EAAA,SAAAtM,GACA,OAAAA,EAAA,GAAAA,EAAAuM,KAQA,SAAAC,EAAAxM,GACA,gBAAAA,EAQA,SAAAyM,EAAAzM,GACA,iBAAA8G,EAAA9G,IAAA,OAAAA,EAEA,IAAA0M,EAAApN,OAAA6H,UAAAuF,eAOA,SAAAC,EAAA3M,GACA,IAAAyM,EAAAzM,GACA,SAGA,IACA,IAAA4M,EAAA5M,EAAAkH,YACAC,EAAAyF,EAAAzF,UACA,OAAAyF,GAAAzF,GAAAuF,EAAApE,KAAAnB,EAAA,iBACK,MAAA0F,GACL,UASA,SAAAC,EAAA9M,GACA,yBAAAA,EAEA,IAAA+M,EAAA/E,MAAAb,UAAA4F,MAOA,SAAAC,EAAAhN,GACA,OAAAgI,MAAAO,KAAAP,MAAAO,KAAAvI,GAAA+M,EAAAzE,KAAAtI,GASA,SAAAiN,EAAAtJ,EAAAyC,GAeA,OAdAzC,GAAAmJ,EAAA1G,KACA4B,MAAAC,QAAAtE,IAAA0I,EAAA1I,EAAA4D,QAGAyF,EAAArJ,GAAAsJ,QAAA,SAAAjN,EAAA6H,GACAzB,EAAAkC,KAAA3E,EAAA3D,EAAA6H,EAAAlE,KAES8I,EAAA9I,IACTrE,OAAA4N,KAAAvJ,GAAAsJ,QAAA,SAAApF,GACAzB,EAAAkC,KAAA3E,IAAAkE,KAAAlE,MAKAA,EASA,IAAAwJ,EAAA7N,OAAA6N,QAAA,SAAA9F,GACA,QAAA+F,EAAAC,UAAA9F,OAAA+F,EAAA,IAAAtF,MAAAoF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAA0FA,EAAAH,EAAaG,IACvGD,EAAAC,EAAA,GAAAF,UAAAE,GAaA,OAVAd,EAAApF,IAAAiG,EAAA/F,OAAA,GACA+F,EAAAL,QAAA,SAAAO,GACAf,EAAAe,IACAlO,OAAA4N,KAAAM,GAAAP,QAAA,SAAApF,GACAR,EAAAQ,GAAA2F,EAAA3F,OAMAR,GAEAoG,EAAA,uBASA,SAAAC,EAAA1N,GACA,IAAA2N,EAAAN,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,QACA,OAAAI,EAAAI,KAAA7N,GAAAyC,KAAAC,MAAA1C,EAAA2N,KAAA3N,EAEA,IAAA8N,EAAA,+CAOA,SAAAC,EAAAC,EAAAC,GACA,IAAAnL,EAAAkL,EAAAlL,MACAmK,EAAAgB,EAAA,SAAAjO,EAAAkO,GACAJ,EAAAD,KAAAK,IAAA7B,EAAArM,KACAA,EAAA,GAAAmJ,OAAAnJ,EAAA,OAGA8C,EAAAoL,GAAAlO,IAmBA,SAAAmO,EAAAH,EAAAhO,GACA,GAAAA,EAIA,GAAAqM,EAAA2B,EAAAzG,QACA0F,EAAAe,EAAA,SAAAI,GACAD,EAAAC,EAAApO,UAKA,GAAAgO,EAAAK,UACAL,EAAAK,UAAAC,IAAAtO,OADA,CAKA,IAAAuO,EAAAP,EAAAO,UAAAC,OAEAD,EAEKA,EAAAE,QAAAzO,GAAA,IACLgO,EAAAO,UAAA,GAAApF,OAAAoF,EAAA,KAAApF,OAAAnJ,IAFAgO,EAAAO,UAAAvO,GAWA,SAAA0O,EAAAV,EAAAhO,GACAA,IAIAqM,EAAA2B,EAAAzG,QACA0F,EAAAe,EAAA,SAAAI,GACAM,EAAAN,EAAApO,KAKAgO,EAAAK,UACAL,EAAAK,UAAAM,OAAA3O,GAIAgO,EAAAO,UAAAE,QAAAzO,IAAA,IACAgO,EAAAO,UAAAP,EAAAO,UAAAK,QAAA5O,EAAA,MAUA,SAAA6O,EAAAb,EAAAhO,EAAA8O,GACA9O,IAIAqM,EAAA2B,EAAAzG,QACA0F,EAAAe,EAAA,SAAAI,GACAS,EAAAT,EAAApO,EAAA8O,KAMAA,EACAX,EAAAH,EAAAhO,GAEA0O,EAAAV,EAAAhO,IAGA,IAAA+O,EAAA,oBAOA,SAAAC,EAAAhP,GACA,OAAAA,EAAA4O,QAAAG,EAAA,SAAAE,cASA,SAAAC,EAAAlB,EAAAmB,GACA,OAAA1C,EAAAuB,EAAAmB,IACAnB,EAAAmB,GAGAnB,EAAAoB,QACApB,EAAAoB,QAAAD,GAGAnB,EAAAqB,aAAA,QAAAlG,OAAA6F,EAAAG,KASA,SAAAG,EAAAtB,EAAAmB,EAAAxL,GACA8I,EAAA9I,GACAqK,EAAAmB,GAAAxL,EACKqK,EAAAoB,QACLpB,EAAAoB,QAAAD,GAAAxL,EAEAqK,EAAAuB,aAAA,QAAApG,OAAA6F,EAAAG,IAAAxL,GA2BA,IAAA6L,EAAA,QAEAC,EAAA,WACA,IAAAC,GAAA,EAEA,GAAA/G,EAAA,CACA,IAAAgH,GAAA,EAEAC,EAAA,aAEAC,EAAAvQ,OAAAsI,kBAA4C,QAC5CkI,IAAA,WAEA,OADAJ,GAAA,EACAC,GAQAI,IAAA,SAAA/P,GACA2P,EAAA3P,KAGA6I,EAAAmH,iBAAA,OAAAJ,EAAAC,GACAhH,EAAAoH,oBAAA,OAAAL,EAAAC,GAGA,OAAAH,EA3BA,GAsCA,SAAAQ,EAAAlC,EAAAxN,EAAAoP,GACA,IAAAC,EAAAxC,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,MACA8C,EAAAP,EACApP,EAAAgO,OAAA4B,MAAAZ,GAAAvC,QAAA,SAAAnM,GACA,IAAA2O,EAAA,CACA,IAAAY,EAAArC,EAAAqC,UAEAA,KAAAvP,IAAAuP,EAAAvP,GAAA8O,KACAO,EAAAE,EAAAvP,GAAA8O,UACAS,EAAAvP,GAAA8O,GAEA,IAAAtQ,OAAA4N,KAAAmD,EAAAvP,IAAAyG,eACA8I,EAAAvP,GAGA,IAAAxB,OAAA4N,KAAAmD,GAAA9I,eACAyG,EAAAqC,WAKArC,EAAAiC,oBAAAnP,EAAAqP,EAAAN,KAWA,SAAAS,EAAAtC,EAAAxN,EAAAoP,GACA,IAAAC,EAAAxC,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,MACAkD,EAAAX,EACApP,EAAAgO,OAAA4B,MAAAZ,GAAAvC,QAAA,SAAAnM,GACA,GAAA+O,EAAAF,OAAAF,EAAA,CACA,IAAAe,EAAAxC,EAAAqC,UACAA,OAAA,IAAAG,KAA0DA,EAE1DD,EAAA,kBACAF,EAAAvP,GAAA8O,GACA5B,EAAAiC,oBAAAnP,EAAAyP,EAAAV,GAEA,QAAAY,EAAApD,UAAA9F,OAAA+F,EAAA,IAAAtF,MAAAyI,GAAAC,EAAA,EAAgFA,EAAAD,EAAeC,IAC/FpD,EAAAoD,GAAArD,UAAAqD,GAGAd,EAAAe,MAAA3C,EAAAV,IAGA+C,EAAAvP,KACAuP,EAAAvP,OAGAuP,EAAAvP,GAAA8O,IACA5B,EAAAiC,oBAAAnP,EAAAuP,EAAAvP,GAAA8O,GAAAC,GAGAQ,EAAAvP,GAAA8O,GAAAW,EACAvC,EAAAqC,YAGArC,EAAAgC,iBAAAlP,EAAAyP,EAAAV,KAWA,SAAAe,EAAA5C,EAAAxN,EAAAmD,GACA,IAAA7C,EAaA,OAXAgM,EAAA+D,QAAA/D,EAAAgE,aACAhQ,EAAA,IAAAgQ,YAAAtQ,GACAuQ,OAAApN,EACAqN,SAAA,EACAC,YAAA,KAGAnQ,EAAAiI,SAAAmI,YAAA,gBACAC,gBAAA3Q,GAAA,KAAAmD,GAGAqK,EAAA4C,cAAA9P,GAQA,SAAAsQ,EAAApD,GACA,IAAAqD,EAAArD,EAAAxM,wBACA,OACAc,KAAA+O,EAAA/O,MAAAsG,OAAA0I,YAAAvI,SAAAC,gBAAAuI,YACAnP,IAAAiP,EAAAjP,KAAAwG,OAAA4I,YAAAzI,SAAAC,gBAAAyI,YAGA,IAAAC,EAAA7I,EAAA6I,SACAC,EAAA,gCAOA,SAAAC,GAAAC,GACA,IAAAC,EAAAD,EAAAE,MAAAJ,GACA,cAAAG,MAAA,KAAAJ,EAAAM,UAAAF,EAAA,KAAAJ,EAAAO,UAAAH,EAAA,KAAAJ,EAAAQ,MAQA,SAAAC,GAAAN,GACA,IAAAO,EAAA,aAAAjJ,QAAA,IAAAkJ,MAAAC,WACA,OAAAT,IAAA,IAAAA,EAAApD,QAAA,cAAA2D,EAQA,SAAAG,GAAAC,GACA,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACAC,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,WACAC,EAAAL,EAAAK,WACAC,KAEAzG,EAAAuG,IAAA,IAAAA,GACAE,EAAAC,KAAA,cAAA5J,OAAAyJ,EAAA,QAGAvG,EAAAwG,IAAA,IAAAA,GACAC,EAAAC,KAAA,cAAA5J,OAAA0J,EAAA,QAIAxG,EAAAoG,IAAA,IAAAA,GACAK,EAAAC,KAAA,UAAA5J,OAAAsJ,EAAA,SAGApG,EAAAqG,IAAA,IAAAA,GACAI,EAAAC,KAAA,UAAA5J,OAAAuJ,EAAA,MAGArG,EAAAsG,IAAA,IAAAA,GACAG,EAAAC,KAAA,UAAA5J,OAAAwJ,EAAA,MAGA,IAAAK,EAAAF,EAAAvL,OAAAuL,EAAAG,KAAA,YACA,OACAC,gBAAAF,EACAG,YAAAH,EACAA,aAqCA,SAAAI,GAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAjR,GACAkR,KAAAF,EACAG,KAAAF,GAEA,OAAAF,EAAA/Q,EAAA4K,GACAwG,OAAAJ,EACAK,OAAAJ,GACKjR,GAiCL,SAAAsR,GAAAC,GAEA,IAAAhP,EAAAgP,EAAAhP,YACAlD,EAAAkS,EAAAlS,OACAC,EAAAiS,EAAAjS,MACArB,EAAA6M,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,aACA0G,EAAAzH,EAAAzK,GACAmS,EAAA1H,EAAA1K,GAEA,GAAAmS,GAAAC,EAAA,CACA,IAAAC,EAAArS,EAAAkD,EAEA,YAAAtE,GAAAyT,EAAApS,GAAA,UAAArB,GAAAyT,EAAApS,EACAD,EAAAC,EAAAiD,EAEAjD,EAAAD,EAAAkD,OAEKiP,EACLnS,EAAAC,EAAAiD,EACKkP,IACLnS,EAAAD,EAAAkD,GAGA,OACAjD,QACAD,UAoHA,IAAAsS,GAAA7T,OAAA6T,aAmBA,IAAAC,GAAA,YA6CA,SAAAC,GAAAC,GACA,IACAC,EADAC,EAAA,IAAAC,SAAAH,GAGA,IACA,IAAAI,EACAC,EACAC,EAEA,SAAAJ,EAAAK,SAAA,UAAAL,EAAAK,SAAA,GAIA,IAHA,IAAArN,EAAAgN,EAAAM,WACAC,EAAA,EAEAA,EAAA,EAAAvN,GAAA,CACA,SAAAgN,EAAAK,SAAAE,IAAA,MAAAP,EAAAK,SAAAE,EAAA,IACAJ,EAAAI,EACA,MAGAA,GAAA,EAIA,GAAAJ,EAAA,CACA,IACAK,EAAAL,EAAA,GAEA,YAlFA,SAAAH,EAAAS,EAAAzN,GACA,IAAA0N,EAAA,GACA1N,GAAAyN,EAEA,QAAA1N,EAAA0N,EAAuB1N,EAAAC,EAAYD,GAAA,EACnC2N,GAAAf,GAAAK,EAAAK,SAAAtN,IAGA,OAAA2N,EA0EAC,CAAAX,EAHAG,EAAA,EAGA,IACA,IAAAS,EAAAZ,EAAAa,UAAAL,GAGA,KAFAN,EAAA,QAAAU,IAEA,QAAAA,IAGA,KAAAZ,EAAAa,UAAAL,EAAA,EAAAN,GAAA,CACA,IAAAY,EAAAd,EAAAe,UAAAP,EAAA,EAAAN,GAEAY,GAAA,IACAV,EAAAI,EAAAM,KAOA,GAAAV,EAAA,CACA,IAEAY,EAEAjO,EAJAkO,EAAAjB,EAAAa,UAAAT,EAAAF,GAMA,IAAAnN,EAAA,EAAmBA,EAAAkO,EAAalO,GAAA,EAGhC,GAFAiO,EAAAZ,EAAA,GAAArN,EAAA,EAEA,MAAAiN,EAAAa,UAAAG,EAAAd,GAEA,CAEAc,GAAA,EAEAjB,EAAAC,EAAAa,UAAAG,EAAAd,GAEAF,EAAAkB,UAAAF,EAAA,EAAAd,GACA,QAIK,MAAA5H,GACLyH,EAAA,EAGA,OAAAA,EA6DA,IAAA3R,IACAA,OAAA,WACA5B,KAAA2U,gBACA3U,KAAA4U,aACA5U,KAAA6U,cACA7U,KAAA8U,eAEA9U,KAAA+U,SACA/U,KAAAgV,iBAGAL,cAAA,WACA,IAAA1H,EAAAjN,KAAAiN,QACA6B,EAAA9O,KAAA8O,QACAmG,EAAAjV,KAAAiV,UACApS,EAAA7C,KAAA6C,QACAuK,EAAAvK,EAAAyF,GACAqF,EAAAV,EAAA3E,GACA,IAAA4M,GACApU,MAAAY,KAAAlC,IAAAyV,EAAAE,YAAAnW,OAAA8P,EAAAhE,oBAAA,KACAjK,OAAAa,KAAAlC,IAAAyV,EAAAG,aAAApW,OAAA8P,EAAA/D,qBAAA,MAEA/K,KAAAkV,gBACAlI,EAAAnK,GACA/B,MAAAoU,EAAApU,MACAD,OAAAqU,EAAArU,SAEAuM,EAAAH,EAAA3E,GACAqF,EAAA9K,EAAAyF,IAGAsM,WAAA,WACA,IAAAM,EAAAlV,KAAAkV,cACAG,EAAArV,KAAAqV,UACArR,EAAAhE,KAAA8O,QAAA9K,SACAsR,EAAA5T,KAAA6T,IAAAF,EAAA3D,QAAA,QACA8D,EAAAF,EAAAD,EAAAI,cAAAJ,EAAAG,aACAC,EAAAH,EAAAD,EAAAG,aAAAH,EAAAI,cACA1R,EAAAyR,EAAAC,EACAC,EAAAR,EAAApU,MACA6U,EAAAT,EAAArU,OAEAqU,EAAArU,OAAAkD,EAAAmR,EAAApU,MACA,IAAAkD,EACA0R,EAAAR,EAAArU,OAAAkD,EAEA4R,EAAAT,EAAApU,MAAAiD,EAEO,IAAAC,EACP2R,EAAAT,EAAApU,MAAAiD,EAEA2R,EAAAR,EAAArU,OAAAkD,EAGA,IAAA6R,GACA7R,cACAyR,eACAC,gBACA3U,MAAA4U,EACA7U,OAAA8U,GAEAC,EAAArU,MAAA2T,EAAApU,MAAA4U,GAAA,EACAE,EAAAvU,KAAA6T,EAAArU,OAAA8U,GAAA,EACAC,EAAAC,QAAAD,EAAArU,KACAqU,EAAAE,OAAAF,EAAAvU,IACArB,KAAA4V,aACA5V,KAAA+V,QAAA,IAAA/R,GAAA,IAAAA,EACAhE,KAAAgW,aAAA,MACAhW,KAAAiW,iBAAA7J,KAAuCiJ,GACvCrV,KAAAkW,kBAAA9J,KAAwCwJ,IAExCI,YAAA,SAAAG,EAAAC,GACA,IAAAtH,EAAA9O,KAAA8O,QACAoG,EAAAlV,KAAAkV,cACAU,EAAA5V,KAAA4V,WACAS,EAAArW,KAAAqW,YACArS,EAAA8K,EAAA9K,SACAD,EAAA6R,EAAA7R,YACAgR,EAAA/U,KAAA+U,SAAAsB,EAEA,GAAAF,EAAA,CACA,IAAAzL,EAAA1L,OAAA8P,EAAApE,iBAAA,EACAC,EAAA3L,OAAA8P,EAAAnE,kBAAA,EAEA3G,EAAA,GACA0G,EAAAhJ,KAAAlC,IAAAkL,EAAAwK,EAAApU,OACA6J,EAAAjJ,KAAAlC,IAAAmL,EAAAuK,EAAArU,QAEA,IAAAmD,IACA2G,EAAA5G,EAAA2G,EACAA,EAAAC,EAAA5G,EAEA4G,EAAAD,EAAA3G,IAGSC,EAAA,IACT0G,EACAA,EAAAhJ,KAAAlC,IAAAkL,EAAAqK,EAAAsB,EAAAvV,MAAA,GACW6J,EACXA,EAAAjJ,KAAAlC,IAAAmL,EAAAoK,EAAAsB,EAAAxV,OAAA,GACWkU,IACXrK,EAAA2L,EAAAvV,OACA6J,EAAA0L,EAAAxV,QAEAkD,EAAA2G,EACAA,EAAAC,EAAA5G,EAEA4G,EAAAD,EAAA3G,IAKA,IAAAuS,EAAAxD,IACA/O,cACAjD,MAAA4J,EACA7J,OAAA8J,IAGAD,EAAA4L,EAAAxV,MACA6J,EAAA2L,EAAAzV,OACA+U,EAAAW,SAAA7L,EACAkL,EAAAY,UAAA7L,EACAiL,EAAAa,SAAAjL,IACAoK,EAAAc,UAAAlL,IAGA,GAAA4K,EACA,GAAApS,GAAA+Q,EAAA,MACA,IAAA4B,EAAAzB,EAAApU,MAAA8U,EAAA9U,MACA8V,EAAA1B,EAAArU,OAAA+U,EAAA/U,OACA+U,EAAAiB,QAAAnV,KAAA3C,IAAA,EAAA4X,GACAf,EAAAkB,OAAApV,KAAA3C,IAAA,EAAA6X,GACAhB,EAAAmB,QAAArV,KAAAlC,IAAA,EAAAmX,GACAf,EAAAoB,OAAAtV,KAAAlC,IAAA,EAAAoX,GAEA7B,GAAA/U,KAAA+V,UACAH,EAAAiB,QAAAnV,KAAA3C,IAAAsX,EAAA9U,KAAA8U,EAAA9U,MAAA8U,EAAAvV,MAAA8U,EAAA9U,QACA8U,EAAAkB,OAAApV,KAAA3C,IAAAsX,EAAAhV,IAAAgV,EAAAhV,KAAAgV,EAAAxV,OAAA+U,EAAA/U,SACA+U,EAAAmB,QAAAV,EAAA9U,KACAqU,EAAAoB,OAAAX,EAAAhV,IAEA,IAAA2C,IACA4R,EAAA9U,OAAAoU,EAAApU,QACA8U,EAAAiB,QAAAnV,KAAA3C,IAAA,EAAA4X,GACAf,EAAAmB,QAAArV,KAAAlC,IAAA,EAAAmX,IAGAf,EAAA/U,QAAAqU,EAAArU,SACA+U,EAAAkB,OAAApV,KAAA3C,IAAA,EAAA6X,GACAhB,EAAAoB,OAAAtV,KAAAlC,IAAA,EAAAoX,WAKAhB,EAAAiB,SAAAjB,EAAA9U,MACA8U,EAAAkB,QAAAlB,EAAA/U,OACA+U,EAAAmB,QAAA7B,EAAApU,MACA8U,EAAAoB,OAAA9B,EAAArU,QAIAiU,aAAA,SAAAmC,EAAAC,GACA,IAAAtB,EAAA5V,KAAA4V,WACAP,EAAArV,KAAAqV,UAEA,GAAA6B,EAAA,CACA,IAAAC,EAtdA,SAAAC,GACA,IAAAtW,EAAAsW,EAAAtW,MACAD,EAAAuW,EAAAvW,OACAwW,EAAAD,EAAAC,OAGA,QAFAA,EAAA3V,KAAA6T,IAAA8B,GAAA,KAGA,OACAvW,MAAAD,EACAA,OAAAC,GAIA,IAAAwW,EAAAD,EAAA,GAAA3V,KAAA6V,GAAA,IACAC,EAAA9V,KAAA+V,IAAAH,GACAI,EAAAhW,KAAAiW,IAAAL,GACAM,EAAA9W,EAAA4W,EAAA7W,EAAA2W,EACAK,EAAA/W,EAAA0W,EAAA3W,EAAA6W,EACA,OAAAL,EAAA,IACAvW,MAAA+W,EACAhX,OAAA+W,IAEA9W,MAAA8W,EACA/W,OAAAgX,GA+bAC,EACAhX,MAAAuU,EAAAG,aAAA9T,KAAA6T,IAAAF,EAAA1D,QAAA,GACA9Q,OAAAwU,EAAAI,cAAA/T,KAAA6T,IAAAF,EAAAzD,QAAA,GACAyF,OAAAhC,EAAA3D,QAAA,IAEA8D,EAAA2B,EAAArW,MACA2U,EAAA0B,EAAAtW,OAEAC,EAAA8U,EAAA9U,OAAA0U,EAAAI,EAAAJ,cACA3U,EAAA+U,EAAA/U,QAAA4U,EAAAG,EAAAH,eACAG,EAAArU,OAAAT,EAAA8U,EAAA9U,OAAA,EACA8U,EAAAvU,MAAAR,EAAA+U,EAAA/U,QAAA,EACA+U,EAAA9U,QACA8U,EAAA/U,SACA+U,EAAA7R,YAAAyR,EAAAC,EACAG,EAAAJ,eACAI,EAAAH,gBACAzV,KAAAgW,aAAA,OAGAJ,EAAA9U,MAAA8U,EAAAa,UAAAb,EAAA9U,MAAA8U,EAAAW,YACAX,EAAArU,KAAAqU,EAAAC,UAGAD,EAAA/U,OAAA+U,EAAAc,WAAAd,EAAA/U,OAAA+U,EAAAY,aACAZ,EAAAvU,IAAAuU,EAAAE,QAGAF,EAAA9U,MAAAY,KAAA3C,IAAA2C,KAAAlC,IAAAoW,EAAA9U,MAAA8U,EAAAW,UAAAX,EAAAa,UACAb,EAAA/U,OAAAa,KAAA3C,IAAA2C,KAAAlC,IAAAoW,EAAA/U,OAAA+U,EAAAY,WAAAZ,EAAAc,WACA1W,KAAAgW,aAAA,MACAJ,EAAArU,KAAAG,KAAA3C,IAAA2C,KAAAlC,IAAAoW,EAAArU,KAAAqU,EAAAiB,SAAAjB,EAAAmB,SACAnB,EAAAvU,IAAAK,KAAA3C,IAAA2C,KAAAlC,IAAAoW,EAAAvU,IAAAuU,EAAAkB,QAAAlB,EAAAoB,QACApB,EAAAC,QAAAD,EAAArU,KACAqU,EAAAE,OAAAF,EAAAvU,IACA2L,EAAAhN,KAAA+X,OAAA3L,GACAtL,MAAA8U,EAAA9U,MACAD,OAAA+U,EAAA/U,QACO2Q,IACPK,WAAA+D,EAAArU,KACAuQ,WAAA8D,EAAAvU,QAEArB,KAAAgY,YAAAf,GAEAjX,KAAA+U,SAAA/U,KAAA+V,SACA/V,KAAAiY,cAAA,OAGAD,YAAA,SAAAf,GACA,IAAArB,EAAA5V,KAAA4V,WACAP,EAAArV,KAAAqV,UACAvU,EAAAuU,EAAAG,cAAAI,EAAA9U,MAAA8U,EAAAJ,cACA3U,EAAAwU,EAAAI,eAAAG,EAAA/U,OAAA+U,EAAAH,eACArJ,EAAAiJ,GACAvU,QACAD,SACAU,MAAAqU,EAAA9U,SAAA,EACAO,KAAAuU,EAAA/U,UAAA,IAEAmM,EAAAhN,KAAA8C,MAAAsJ,GACAtL,MAAAuU,EAAAvU,MACAD,OAAAwU,EAAAxU,QACO2Q,GAAApF,GACPyF,WAAAwD,EAAA9T,KACAuQ,WAAAuD,EAAAhU,KACOgU,MAEP4B,GACAjX,KAAAkY,UAGArD,YAAA,WACA,IAAA/F,EAAA9O,KAAA8O,QACA8G,EAAA5V,KAAA4V,WACA7R,EAAA+K,EAAA/K,aAAA+K,EAAA1F,mBACAW,EAAA/K,OAAA8P,EAAA/E,eAAA,GACAsM,GACAvV,MAAA8U,EAAA9U,MACAD,OAAA+U,EAAA/U,QAGAkD,IACA6R,EAAA/U,OAAAkD,EAAA6R,EAAA9U,MACAuV,EAAAxV,OAAAwV,EAAAvV,MAAAiD,EAEAsS,EAAAvV,MAAAuV,EAAAxV,OAAAkD,GAIA/D,KAAAqW,cACArW,KAAAiY,cAAA,MAEA5B,EAAAvV,MAAAY,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAAvV,MAAAuV,EAAAE,UAAAF,EAAAI,UACAJ,EAAAxV,OAAAa,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAAxV,OAAAwV,EAAAG,WAAAH,EAAAK,WAEAL,EAAAvV,MAAAY,KAAAlC,IAAA6W,EAAAE,SAAAF,EAAAvV,MAAAiJ,GACAsM,EAAAxV,OAAAa,KAAAlC,IAAA6W,EAAAG,UAAAH,EAAAxV,OAAAkJ,GACAsM,EAAA9U,KAAAqU,EAAArU,MAAAqU,EAAA9U,MAAAuV,EAAAvV,OAAA,EACAuV,EAAAhV,IAAAuU,EAAAvU,KAAAuU,EAAA/U,OAAAwV,EAAAxV,QAAA,EACAwV,EAAAR,QAAAQ,EAAA9U,KACA8U,EAAAP,OAAAO,EAAAhV,IACArB,KAAAmY,mBAAA/L,KAAyCiK,IAEzC4B,aAAA,SAAA9B,EAAAC,GACA,IAAAtH,EAAA9O,KAAA8O,QACAoG,EAAAlV,KAAAkV,cACAU,EAAA5V,KAAA4V,WACAS,EAAArW,KAAAqW,YACAN,EAAA/V,KAAA+V,QACAhS,EAAA+K,EAAA/K,YAEA,GAAAoS,EAAA,CACA,IAAAvL,EAAA5L,OAAA8P,EAAAlE,kBAAA,EACAC,EAAA7L,OAAA8P,EAAAjE,mBAAA,EACAuN,EAAArC,EAAArU,KAAA3C,IAAAmW,EAAApU,MAAA8U,EAAA9U,MAAA8U,EAAA9U,MAAA8U,EAAArU,KAAA2T,EAAApU,MAAA8U,EAAArU,MAAA2T,EAAApU,MACAuX,EAAAtC,EAAArU,KAAA3C,IAAAmW,EAAArU,OAAA+U,EAAA/U,OAAA+U,EAAA/U,OAAA+U,EAAAvU,IAAA6T,EAAArU,OAAA+U,EAAAvU,KAAA6T,EAAArU,OAEA+J,EAAAlJ,KAAA3C,IAAA6L,EAAAsK,EAAApU,OACA+J,EAAAnJ,KAAA3C,IAAA8L,EAAAqK,EAAArU,QAEAkD,IACA6G,GAAAC,EACAA,EAAA9G,EAAA6G,EACAC,EAAAD,EAAA7G,EAEA6G,EAAAC,EAAA9G,EAEW6G,EACXC,EAAAD,EAAA7G,EACW8G,IACXD,EAAAC,EAAA9G,GAGAsU,EAAAtU,EAAAqU,EACAC,EAAAD,EAAArU,EAEAqU,EAAAC,EAAAtU,GAKAsS,EAAAE,SAAA7U,KAAA3C,IAAA6L,EAAAwN,GACA/B,EAAAG,UAAA9U,KAAA3C,IAAA8L,EAAAwN,GACAhC,EAAAI,SAAA2B,EACA/B,EAAAK,UAAA2B,EAGAjC,IACAL,GACAM,EAAAQ,QAAAnV,KAAAlC,IAAA,EAAAoW,EAAArU,MACA8U,EAAAS,OAAApV,KAAAlC,IAAA,EAAAoW,EAAAvU,KACAgV,EAAAU,QAAArV,KAAA3C,IAAAmW,EAAApU,MAAA8U,EAAArU,KAAAqU,EAAA9U,OAAAuV,EAAAvV,MACAuV,EAAAW,OAAAtV,KAAA3C,IAAAmW,EAAArU,OAAA+U,EAAAvU,IAAAuU,EAAA/U,QAAAwV,EAAAxV,SAEAwV,EAAAQ,QAAA,EACAR,EAAAS,OAAA,EACAT,EAAAU,QAAA7B,EAAApU,MAAAuV,EAAAvV,MACAuV,EAAAW,OAAA9B,EAAArU,OAAAwV,EAAAxV,UAIAmU,cAAA,WACA,IAAAlG,EAAA9O,KAAA8O,QACAoG,EAAAlV,KAAAkV,cACAmB,EAAArW,KAAAqW,aAEAA,EAAAvV,MAAAuV,EAAAI,UAAAJ,EAAAvV,MAAAuV,EAAAE,YACAF,EAAA9U,KAAA8U,EAAAR,UAGAQ,EAAAxV,OAAAwV,EAAAK,WAAAL,EAAAxV,OAAAwV,EAAAG,aACAH,EAAAhV,IAAAgV,EAAAP,QAGAO,EAAAvV,MAAAY,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAAvV,MAAAuV,EAAAE,UAAAF,EAAAI,UACAJ,EAAAxV,OAAAa,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAAxV,OAAAwV,EAAAG,WAAAH,EAAAK,WACA1W,KAAAiY,cAAA,MACA5B,EAAA9U,KAAAG,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAA9U,KAAA8U,EAAAQ,SAAAR,EAAAU,SACAV,EAAAhV,IAAAK,KAAA3C,IAAA2C,KAAAlC,IAAA6W,EAAAhV,IAAAgV,EAAAS,QAAAT,EAAAW,QACAX,EAAAR,QAAAQ,EAAA9U,KACA8U,EAAAP,OAAAO,EAAAhV,IAEAyN,EAAA9E,SAAA8E,EAAAvE,gBAEAgE,EAAAvO,KAAAsY,KAAA3P,EAAA0N,EAAAvV,OAAAoU,EAAApU,OAAAuV,EAAAxV,QAAAqU,EAAArU,OA34CA,OAFA,OAg5CAmM,EAAAhN,KAAAuY,QAAAnM,GACAtL,MAAAuV,EAAAvV,MACAD,OAAAwV,EAAAxV,QACO2Q,IACPK,WAAAwE,EAAA9U,KACAuQ,WAAAuE,EAAAhV,QAGArB,KAAA+U,SAAA/U,KAAA+V,SACA/V,KAAAgW,aAAA,MAGAhW,KAAAd,UACAc,KAAAkY,UAGAA,OAAA,WACAlY,KAAAkE,UACA2L,EAAA7P,KAAAiN,QAt4CA,OAs4CAjN,KAAAmO,aAIAjK,IACAsU,YAAA,WACA,IAAAC,EAAAzY,KAAAyY,YACAvU,EAAAlE,KAAA8O,QAAA5K,QACA4M,EAAA2H,EAAAzY,KAAA0Y,eAAA1Y,KAAA8Q,IACAhO,EAAAkF,SAAA2Q,cAAA,OAUA,GARAF,IACA3V,EAAA2V,eAGA3V,EAAAgC,IAAAgM,EACA9Q,KAAA4Y,QAAAC,YAAA/V,GACA9C,KAAA8Y,aAAAhW,EAEAoB,EAAA,CAIA,IAAA6U,EAAA7U,EAEA,iBAAAA,EACA6U,EAAA/Y,KAAAiN,QAAA+L,cAAAC,iBAAA/U,GACOA,EAAAgV,gBACPH,GAAA7U,IAGAlE,KAAA+Y,WACA7M,EAAA6M,EAAA,SAAAI,GACA,IAAAC,EAAApR,SAAA2Q,cAAA,OAEApK,EAAA4K,EAAAvQ,GACA9H,MAAAqY,EAAAhE,YACAtU,OAAAsY,EAAA/D,aACAiE,KAAAF,EAAAG,YAGAb,IACAW,EAAAX,eAGAW,EAAAtU,IAAAgM,EAQAsI,EAAArX,MAAAwX,QAAA,0KACAJ,EAAAG,UAAA,GACAH,EAAAN,YAAAO,OAGAI,aAAA,WACAtN,EAAAlM,KAAA+Y,SAAA,SAAA9L,GACA,IAAArK,EAAAuL,EAAAlB,EAAArE,GACAoE,EAAAC,GACAnM,MAAA8B,EAAA9B,MACAD,OAAA+B,EAAA/B,SAEAoM,EAAAqM,UAAA1W,EAAAyW,KApjCA,SAAApM,EAAAmB,GACA,GAAA1C,EAAAuB,EAAAmB,IACA,WACAnB,EAAAmB,GACO,MAAAtC,GACPmB,EAAAmB,QAAAvB,OAEK,GAAAI,EAAAoB,QAEL,WACApB,EAAAoB,QAAAD,GACO,MAAAtC,GACPmB,EAAAoB,QAAAD,QAAAvB,OAGAI,EAAAwM,gBAAA,QAAArR,OAAA6F,EAAAG,KAsiCAsL,CAAAzM,EAAArE,MAGA1E,QAAA,WACA,IAAAmR,EAAArV,KAAAqV,UACAO,EAAA5V,KAAA4V,WACAS,EAAArW,KAAAqW,YACAsD,EAAAtD,EAAAvV,MACA8Y,EAAAvD,EAAAxV,OACAC,EAAAuU,EAAAvU,MACAD,EAAAwU,EAAAxU,OACAU,EAAA8U,EAAA9U,KAAAqU,EAAArU,KAAA8T,EAAA9T,KACAF,EAAAgV,EAAAhV,IAAAuU,EAAAvU,IAAAgU,EAAAhU,IAEArB,KAAA+U,UAAA/U,KAAAd,WAIA8N,EAAAhN,KAAA8Y,aAAA1M,GACAtL,QACAD,UACO2Q,GAAApF,GACPyF,YAAAtQ,EACAuQ,YAAAzQ,GACOgU,MACPnJ,EAAAlM,KAAA+Y,SAAA,SAAA9L,GACA,IAAArK,EAAAuL,EAAAlB,EAAArE,GACAiR,EAAAjX,EAAA9B,MACAgZ,EAAAlX,EAAA/B,OACA+W,EAAAiC,EACAhC,EAAAiC,EACAC,EAAA,EAEAJ,IAEA9B,EAAA+B,GADAG,EAAAF,EAAAF,IAIAC,GAAA/B,EAAAiC,IAEAlC,EAAA+B,GADAI,EAAAD,EAAAF,GAEA/B,EAAAiC,GAGA9M,EAAAC,GACAnM,MAAA8W,EACA/W,OAAAgX,IAEA7K,EAAAC,EAAA+M,qBAAA,UAAA5N,GACAtL,QAAAiZ,EACAlZ,SAAAkZ,GACSvI,GAAApF,GACTyF,YAAAtQ,EAAAwY,EACAjI,YAAAzQ,EAAA0Y,GACS1E,WAKT4E,IACAC,KAAA,WACA,IAAAjN,EAAAjN,KAAAiN,QACA6B,EAAA9O,KAAA8O,QACAjM,EAAA7C,KAAA6C,QAEAkJ,EAAA+C,EAAA7D,YACAsE,EAAAtC,EAvgDA,YAugDA6B,EAAA7D,WAGAc,EAAA+C,EAAA5D,WACAqE,EAAAtC,EA5gDA,WA4gDA6B,EAAA5D,UAGAa,EAAA+C,EAAA3D,UACAoE,EAAAtC,EAjhDA,UAihDA6B,EAAA3D,SAGAY,EAAA+C,EAAA3K,OACAoL,EAAAtC,EAthDA,OAshDA6B,EAAA3K,MAGA4H,EAAA+C,EAAA1D,OACAmE,EAAAtC,EA5gDA,OA4gDA6B,EAAA1D,MAGAmE,EAAA1M,EAAAgG,EAAA7I,KAAAma,YAAAna,KAAAoa,UAAAF,KAAAla,OAEA8O,EAAA3E,UAAA2E,EAAAzE,aACAkF,EAAA1M,EAnhDA,QAmhDA7C,KAAAqa,QAAAra,KAAAsa,MAAAJ,KAAAla,OACAua,SAAA,EACAC,SAAA,IAIA1L,EAAArE,0BACA8E,EAAA1M,EAniDA,WAmiDA7C,KAAAya,WAAAza,KAAA0a,SAAAR,KAAAla,OAGAuP,EAAAtC,EAAA+L,cAAAlQ,EAAA9I,KAAA2a,WAAA3a,KAAA4a,SAAAV,KAAAla,OACAuP,EAAAtC,EAAA+L,cAAAjQ,EAAA/I,KAAA6a,UAAA7a,KAAA8a,QAAAZ,KAAAla,OAEA8O,EAAAxF,YACAiG,EAAA1H,OAliDA,SAkiDA7H,KAAA+a,SAAA/a,KAAAgb,OAAAd,KAAAla,QAGAib,OAAA,WACA,IAAAhO,EAAAjN,KAAAiN,QACA6B,EAAA9O,KAAA8O,QACAjM,EAAA7C,KAAA6C,QAEAkJ,EAAA+C,EAAA7D,YACAkE,EAAAlC,EApjDA,YAojDA6B,EAAA7D,WAGAc,EAAA+C,EAAA5D,WACAiE,EAAAlC,EAzjDA,WAyjDA6B,EAAA5D,UAGAa,EAAA+C,EAAA3D,UACAgE,EAAAlC,EA9jDA,UA8jDA6B,EAAA3D,SAGAY,EAAA+C,EAAA3K,OACAgL,EAAAlC,EAnkDA,OAmkDA6B,EAAA3K,MAGA4H,EAAA+C,EAAA1D,OACA+D,EAAAlC,EAzjDA,OAyjDA6B,EAAA1D,MAGA+D,EAAAtM,EAAAgG,EAAA7I,KAAAma,aAEArL,EAAA3E,UAAA2E,EAAAzE,aACA8E,EAAAtM,EAhkDA,QAgkDA7C,KAAAqa,SACAE,SAAA,EACAC,SAAA,IAIA1L,EAAArE,0BACA0E,EAAAtM,EAhlDA,WAglDA7C,KAAAya,YAGAtL,EAAAlC,EAAA+L,cAAAlQ,EAAA9I,KAAA2a,YACAxL,EAAAlC,EAAA+L,cAAAjQ,EAAA/I,KAAA6a,WAEA/L,EAAAxF,YACA6F,EAAAtH,OA/kDA,SA+kDA7H,KAAA+a,YAKAG,IACAF,OAAA,WACA,IAAAlM,EAAA9O,KAAA8O,QACAmG,EAAAjV,KAAAiV,UACAC,EAAAlV,KAAAkV,cACApK,EAAA9L,OAAA8P,EAAAhE,oBA9kDA,IA+kDAC,EAAA/L,OAAA8P,EAAA/D,qBA9kDA,IAglDA,KAAA/K,KAAAd,UAAAgW,EAAApU,OAAAgK,GAAAoK,EAAArU,QAAAkK,GAAA,CAIA,IAGA6K,EACAS,EAJA0D,EAAA9E,EAAAE,YAAAD,EAAApU,MAEA,OAAAiZ,GAAA9E,EAAAG,eAAAF,EAAArU,OAIAiO,EAAAvF,UACAqM,EAAA5V,KAAAmb,gBACA9E,EAAArW,KAAAob,kBAGApb,KAAA4B,SAEAkN,EAAAvF,UACAvJ,KAAAqb,cAAAnP,EAAA0J,EAAA,SAAA0F,EAAA/U,GACAqP,EAAArP,GAAA+U,EAAAvB,KAEA/Z,KAAAub,eAAArP,EAAAmK,EAAA,SAAAiF,EAAA/U,GACA8P,EAAA9P,GAAA+U,EAAAvB,QAKAW,SAAA,WAz3CA,IAAAzN,EAAAhO,EA03CAe,KAAAd,UAtoDA,SAsoDAc,KAAA8O,QAAA7K,UAIAjE,KAAAwb,aA93CAvO,EA83CAjN,KAAAyb,QA93CAxc,EA83CAkJ,GA73CA8E,EAAAK,UAAAL,EAAAK,UAAAoO,SAAAzc,GAAAgO,EAAAO,UAAAE,QAAAzO,IAAA,GA9QA,OADA,UA8oDAqb,MAAA,SAAAva,GACA,IAAA4b,EAAA3b,KAEA+Z,EAAA/a,OAAAgB,KAAA8O,QAAAxE,iBAAA,GACAsR,EAAA,EAEA5b,KAAAd,WAIAa,EAAA8b,iBAEA7b,KAAA8b,WAIA9b,KAAA8b,UAAA,EACAC,WAAA,WACAJ,EAAAG,UAAA,GACO,IAEP/b,EAAAY,OACAib,EAAA7b,EAAAY,OAAA,OACOZ,EAAAic,WACPJ,GAAA7b,EAAAic,WAAA,IACOjc,EAAAiQ,SACP4L,EAAA7b,EAAAiQ,OAAA,QAGAhQ,KAAAoL,MAAAwQ,EAAA7B,EAAAha,MAEAqa,UAAA,SAAAra,GACA,IAAAkc,EAAAlc,EAAAkc,QACAC,EAAAnc,EAAAmc,OAEA,KAAAlc,KAAAd,UAEAoM,EAAA2Q,IAAA,IAAAA,GAAA3Q,EAAA4Q,IAAA,IAAAA,GACAnc,EAAAoc,SAHA,CAOA,IAEAC,EAFAtN,EAAA9O,KAAA8O,QACAuN,EAAArc,KAAAqc,SAGAtc,EAAAuc,eAEApQ,EAAAnM,EAAAuc,eAAA,SAAAzd,GACAwd,EAAAxd,EAAA0d,YAAAlK,GAAAxT,KAIAwd,EAAAtc,EAAAyc,WAAA,GAAAnK,GAAAtS,GAIAqc,EADA7d,OAAA4N,KAAAkQ,GAAA7V,OAAA,GAAAsI,EAAA3E,UAAA2E,EAAA1E,YA3tDA,OA8tDA+D,EAAApO,EAAAuG,OAAAqC,GAGAK,EAAA8D,KAAAsP,KAOO,IAHPvM,EAAA7P,KAAAiN,QAzsDA,aA0sDAwP,cAAA1c,EACAqc,aAMArc,EAAA8b,iBACA7b,KAAAoc,SACApc,KAAA0c,UAAA,EAjvDA,SAmvDAN,IACApc,KAAA0c,UAAA,EACAtP,EAAApN,KAAAyb,QAAAhT,OAGAmS,SAAA,SAAA7a,GACA,IAAAqc,EAAApc,KAAAoc,OAEA,IAAApc,KAAAd,UAAAkd,EAAA,CAIA,IAAAC,EAAArc,KAAAqc,SACAtc,EAAA8b,kBAKO,IAHPhM,EAAA7P,KAAAiN,QAruDA,YAsuDAwP,cAAA1c,EACAqc,aAKArc,EAAAuc,eACApQ,EAAAnM,EAAAuc,eAAA,SAAAzd,GAEAuN,EAAAiQ,EAAAxd,EAAA0d,gBAAiDlK,GAAAxT,GAAA,MAGjDuN,EAAAiQ,EAAAtc,EAAAyc,WAAA,OAAmDnK,GAAAtS,GAAA,IAGnDC,KAAAmF,OAAApF,MAEA+a,QAAA,SAAA/a,GACA,IAAAC,KAAAd,SAAA,CAIA,IAAAkd,EAAApc,KAAAoc,OACAC,EAAArc,KAAAqc,SAEAtc,EAAAuc,eACApQ,EAAAnM,EAAAuc,eAAA,SAAAzd,UACAwd,EAAAxd,EAAA0d,qBAGAF,EAAAtc,EAAAyc,WAAA,GAGAJ,IAIArc,EAAA8b,iBAEAtd,OAAA4N,KAAAkQ,GAAA7V,SACAxG,KAAAoc,OAAA,IAGApc,KAAA0c,WACA1c,KAAA0c,UAAA,EACA5O,EAAA9N,KAAAyb,QAAAhT,EAAAzI,KAAA+U,SAAA/U,KAAA8O,QAAApF,QAGAmG,EAAA7P,KAAAiN,QAvxDA,WAwxDAwP,cAAA1c,EACAqc,eAKAjX,IACAA,OAAA,SAAApF,GACA,IAkBAgU,EAlBAjF,EAAA9O,KAAA8O,QACA8G,EAAA5V,KAAA4V,WACAV,EAAAlV,KAAAkV,cACAmB,EAAArW,KAAAqW,YACAgG,EAAArc,KAAAqc,SACAD,EAAApc,KAAAoc,OACArY,EAAA+K,EAAA/K,YACAxC,EAAA8U,EAAA9U,KACAF,EAAAgV,EAAAhV,IACAP,EAAAuV,EAAAvV,MACAD,EAAAwV,EAAAxV,OACA8b,EAAApb,EAAAT,EACA8b,EAAAvb,EAAAR,EACAgW,EAAA,EACAC,EAAA,EACAL,EAAAvB,EAAApU,MACA4V,EAAAxB,EAAArU,OACAgc,GAAA,GAGA9Y,GAAAhE,EAAA+c,WACA/Y,EAAAjD,GAAAD,EAAAC,EAAAD,EAAA,GAGAb,KAAA+V,UACAc,EAAAR,EAAAQ,QACAC,EAAAT,EAAAS,OACAL,EAAAI,EAAAnV,KAAA3C,IAAAmW,EAAApU,MAAA8U,EAAA9U,MAAA8U,EAAArU,KAAAqU,EAAA9U,OACA4V,EAAAI,EAAApV,KAAA3C,IAAAmW,EAAArU,OAAA+U,EAAA/U,OAAA+U,EAAAvU,IAAAuU,EAAA/U,SAGA,IAAAkc,EAAAV,EAAA9d,OAAA4N,KAAAkQ,GAAA,IACAW,GACAC,EAAAF,EAAArK,KAAAqK,EAAAnK,OACAsK,EAAAH,EAAApK,KAAAoK,EAAAlK,QAGAsK,EAAA,SAAAC,GACA,OAAAA,GACA,IAh2DA,IAi2DAT,EAAAK,EAAAC,EAAAxG,IACAuG,EAAAC,EAAAxG,EAAAkG,GAGA,MAEA,IAt2DA,IAu2DApb,EAAAyb,EAAAC,EAAApG,IACAmG,EAAAC,EAAApG,EAAAtV,GAGA,MAEA,IA32DA,IA42DAF,EAAA2b,EAAAE,EAAApG,IACAkG,EAAAE,EAAApG,EAAAzV,GAGA,MAEA,IAn3DA,IAo3DAub,EAAAI,EAAAE,EAAAxG,IACAsG,EAAAE,EAAAxG,EAAAkG,KASA,OAAAR,GAEA,IAt4DA,MAu4DA7a,GAAAyb,EAAAC,EACA5b,GAAA2b,EAAAE,EACA,MAGA,IAx4DA,IAy4DA,GAAAF,EAAAC,GAAA,IAAAN,GAAAlG,GAAA1S,IAAA1C,GAAAyV,GAAA8F,GAAAlG,IAAA,CACAmG,GAAA,EACA,MAGAM,EA94DA,MA+4DArc,GAAAkc,EAAAC,GAEA,IACAb,EAj5DA,IAm5DA7a,GADAT,MAIAiD,IACAlD,EAAAC,EAAAiD,EACA1C,IAAAgV,EAAAxV,UAAA,GAGA,MAEA,IA35DA,IA45DA,GAAAmc,EAAAE,GAAA,IAAA7b,GAAAyV,GAAA/S,IAAAxC,GAAAsV,GAAA8F,GAAAlG,IAAA,CACAoG,GAAA,EACA,MAGAM,EAj6DA,KAk6DAtc,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,EAEArc,EAAA,IACAub,EAv6DA,IAy6DA/a,GADAR,MAIAkD,IACAjD,EAAAD,EAAAkD,EACAxC,IAAA8U,EAAAvV,SAAA,GAGA,MAEA,IAp7DA,IAq7DA,GAAAkc,EAAAC,GAAA,IAAA1b,GAAAsV,GAAA9S,IAAA1C,GAAAyV,GAAA8F,GAAAlG,IAAA,CACAmG,GAAA,EACA,MAGAM,EA17DA,KA27DArc,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,EAEAnc,EAAA,IACAsb,EAh8DA,IAk8DA7a,GADAT,MAIAiD,IACAlD,EAAAC,EAAAiD,EACA1C,IAAAgV,EAAAxV,UAAA,GAGA,MAEA,IA18DA,IA28DA,GAAAmc,EAAAE,GAAA,IAAAN,GAAAlG,GAAA3S,IAAAxC,GAAAsV,GAAA8F,GAAAlG,IAAA,CACAoG,GAAA,EACA,MAGAM,EAh9DA,MAi9DAtc,GAAAmc,EAAAE,GAEA,IACAd,EAn9DA,IAq9DA/a,GADAR,MAIAkD,IACAjD,EAAAD,EAAAkD,EACAxC,IAAA8U,EAAAvV,SAAA,GAGA,MAEA,IA99DA,KA+9DA,GAAAiD,EAAA,CACA,GAAAiZ,EAAAE,GAAA,IAAA7b,GAAAyV,GAAA6F,GAAAlG,GAAA,CACAoG,GAAA,EACA,MAGAM,EAt+DA,KAu+DAtc,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,EACApc,EAAAD,EAAAkD,OAEAoZ,EA3+DA,KA4+DAA,EA/+DA,KAi/DAH,EAAAC,GAAA,EACAN,EAAAlG,EACA3V,GAAAkc,EAAAC,EACeD,EAAAE,GAAA,GAAA7b,GAAAyV,IACf+F,GAAA,GAGA/b,GAAAkc,EAAAC,EAGAD,EAAAE,GAAA,EACA7b,EAAAyV,IACAjW,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,IAGArc,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,GAIApc,EAAA,GAAAD,EAAA,GACAub,EAhgEA,KAmgEA/a,GAFAR,KAGAU,GAFAT,MAGWA,EAAA,GACXsb,EAxgEA,KA0gEA7a,GADAT,MAEWD,EAAA,IACXub,EA3gEA,KA6gEA/a,GADAR,MAIA,MAEA,IAnhEA,KAohEA,GAAAkD,EAAA,CACA,GAAAiZ,EAAAE,GAAA,IAAA7b,GAAAyV,GAAAvV,GAAAsV,GAAA,CACAgG,GAAA,EACA,MAGAM,EA5hEA,KA6hEAtc,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,EACApc,EAAAD,EAAAkD,EACAxC,GAAA8U,EAAAvV,aAEAqc,EAliEA,KAmiEAA,EAriEA,KAuiEAH,EAAAC,GAAA,EACA1b,EAAAsV,GACA/V,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,GACeD,EAAAE,GAAA,GAAA7b,GAAAyV,IACf+F,GAAA,IAGA/b,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,GAGAD,EAAAE,GAAA,EACA7b,EAAAyV,IACAjW,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,IAGArc,GAAAmc,EAAAE,EACA7b,GAAA2b,EAAAE,GAIApc,EAAA,GAAAD,EAAA,GACAub,EA1jEA,KA6jEA/a,GAFAR,KAGAU,GAFAT,MAGWA,EAAA,GACXsb,EAlkEA,KAokEA7a,GADAT,MAEWD,EAAA,IACXub,EAnkEA,KAqkEA/a,GADAR,MAIA,MAEA,IA1kEA,KA2kEA,GAAAkD,EAAA,CACA,GAAAiZ,EAAAC,GAAA,IAAA1b,GAAAsV,GAAA+F,GAAAlG,GAAA,CACAmG,GAAA,EACA,MAGAM,EAvlEA,KAwlEArc,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,EACApc,EAAAC,EAAAiD,OAEAoZ,EA3lEA,KA4lEAA,EA7lEA,KA+lEAH,EAAAC,GAAA,EACA1b,EAAAsV,GACA/V,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,GACeD,EAAAE,GAAA,GAAAN,GAAAlG,IACfmG,GAAA,IAGA/b,GAAAkc,EAAAC,EACA1b,GAAAyb,EAAAC,GAGAD,EAAAE,GAAA,EACAN,EAAAlG,IACA7V,GAAAmc,EAAAE,GAGArc,GAAAmc,EAAAE,EAIApc,EAAA,GAAAD,EAAA,GACAub,EAlnEA,KAqnEA/a,GAFAR,KAGAU,GAFAT,MAGWA,EAAA,GACXsb,EAtnEA,KAwnEA7a,GADAT,MAEWD,EAAA,IACXub,EA3nEA,KA6nEA/a,GADAR,MAIA,MAEA,IAjoEA,KAkoEA,GAAAkD,EAAA,CACA,GAAAiZ,EAAAC,GAAA,IAAAN,GAAAlG,GAAAmG,GAAAlG,GAAA,CACAmG,GAAA,EACA,MAGAM,EA9oEA,KAgpEAtc,GADAC,GAAAkc,EAAAC,GACAlZ,OAEAoZ,EAhpEA,KAipEAA,EAnpEA,KAqpEAH,EAAAC,GAAA,EACAN,EAAAlG,EACA3V,GAAAkc,EAAAC,EACeD,EAAAE,GAAA,GAAAN,GAAAlG,IACfmG,GAAA,GAGA/b,GAAAkc,EAAAC,EAGAD,EAAAE,GAAA,EACAN,EAAAlG,IACA7V,GAAAmc,EAAAE,GAGArc,GAAAmc,EAAAE,EAIApc,EAAA,GAAAD,EAAA,GACAub,EApqEA,KAuqEA/a,GAFAR,KAGAU,GAFAT,MAGWA,EAAA,GACXsb,EAxqEA,KA0qEA7a,GADAT,MAEWD,EAAA,IACXub,EA/qEA,KAirEA/a,GADAR,MAIA,MAGA,IA7rEA,OA8rEAb,KAAAqd,KAAAL,EAAAC,EAAAD,EAAAE,GACAL,GAAA,EACA,MAGA,IAlsEA,OAmsEA7c,KAAAoL,KAhjDA,SAAAiR,GACA,IAAAiB,EAAAlR,KAA6BiQ,GAC7BkB,KAiBA,OAhBArR,EAAAmQ,EAAA,SAAAU,EAAAP,UACAc,EAAAd,GACAtQ,EAAAoR,EAAA,SAAAE,GACA,IAAAC,EAAA/b,KAAA6T,IAAAwH,EAAAnK,OAAA4K,EAAA5K,QACA8K,EAAAhc,KAAA6T,IAAAwH,EAAAlK,OAAA2K,EAAA3K,QACA8K,EAAAjc,KAAA6T,IAAAwH,EAAArK,KAAA8K,EAAA9K,MACAkL,EAAAlc,KAAA6T,IAAAwH,EAAApK,KAAA6K,EAAA7K,MACAkL,EAAAnc,KAAAoc,KAAAL,IAAAC,KAEA3D,GADArY,KAAAoc,KAAAH,IAAAC,KACAC,KACAN,EAAAvL,KAAA+H,OAGAwD,EAAAQ,KAAA,SAAAja,EAAAka,GACA,OAAAtc,KAAA6T,IAAAzR,GAAApC,KAAA6T,IAAAyI,KAEAT,EAAA,GA6hDAU,CAAA5B,GAAAtc,GACA8c,GAAA,EACA,MAGA,IA1sEA,OA2sEA,IAAAG,EAAAC,IAAAD,EAAAE,EAAA,CACAL,GAAA,EACA,MAGA9I,EAAA1D,EAAArQ,KAAA6C,SACAtB,EAAAwb,EAAAnK,OAAAmB,EAAAxS,KACAF,EAAA0b,EAAAlK,OAAAkB,EAAA1S,IACAP,EAAAuV,EAAAE,SACA1V,EAAAwV,EAAAG,UAEAwG,EAAAC,EAAA,EACAb,EAAAY,EAAAE,EAAA,EA9sEA,KAFA,KAitEWF,EAAAC,EAAA,IACX1b,GAAAT,EACAsb,EAAAY,EAAAE,EAAA,EAhtEA,KAFA,MAqtEAF,EAAAE,EAAA,IACA7b,GAAAR,GAIAb,KAAA+U,UACApH,EAAA3N,KAAAuY,QAAAjQ,GACAtI,KAAA+U,SAAA,EAEA/U,KAAA+V,SACA/V,KAAAiY,cAAA,OASA4E,IACAxG,EAAAvV,QACAuV,EAAAxV,SACAwV,EAAA9U,OACA8U,EAAAhV,MACArB,KAAAoc,SACApc,KAAAgV,iBAIA9I,EAAAmQ,EAAA,SAAA6B,GACAA,EAAAtL,OAAAsL,EAAAxL,KACAwL,EAAArL,OAAAqL,EAAAvL,SAKA9S,IAEAsE,KAAA,WAaA,OAZAnE,KAAAgL,OAAAhL,KAAA+U,SAAA/U,KAAAd,WACAc,KAAA+U,SAAA,EACA/U,KAAAiY,cAAA,MAEAjY,KAAA8O,QAAApF,OACA0D,EAAApN,KAAAyb,QAAAhT,GAGAkF,EAAA3N,KAAAuY,QAAAjQ,GACAtI,KAAAub,eAAAvb,KAAAmY,qBAGAnY,MAGAme,MAAA,WAYA,OAXAne,KAAAgL,QAAAhL,KAAAd,WACAc,KAAAqV,UAAAjJ,KAAkCpM,KAAAiW,kBAClCjW,KAAA4V,WAAAxJ,KAAmCpM,KAAAkW,mBACnClW,KAAAqW,YAAAjK,KAAoCpM,KAAAmY,oBACpCnY,KAAA8U,eAEA9U,KAAA+U,SACA/U,KAAAgV,iBAIAhV,MAGAoe,MAAA,WAiBA,OAhBApe,KAAA+U,UAAA/U,KAAAd,WACAkN,EAAApM,KAAAqW,aACA9U,KAAA,EACAF,IAAA,EACAP,MAAA,EACAD,OAAA,IAEAb,KAAA+U,SAAA,EACA/U,KAAAgV,gBACAhV,KAAAgW,aAAA,MAEAhW,KAAA8U,eACAnH,EAAA3N,KAAAyb,QAAAhT,GACA2E,EAAApN,KAAAuY,QAAAjQ,IAGAtI,MASA6N,QAAA,SAAAiD,GACA,IAAAuN,EAAA/R,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,IAAAA,UAAA,GA4BA,OA1BAtM,KAAAd,UAAA4R,IACA9Q,KAAAse,QACAte,KAAAiN,QAAAnI,IAAAgM,GAGAuN,GACAre,KAAA8Q,MACA9Q,KAAA8C,MAAAgC,IAAAgM,EAEA9Q,KAAAgL,QACAhL,KAAA8Y,aAAAhU,IAAAgM,EACA5E,EAAAlM,KAAA+Y,SAAA,SAAA9L,GACAA,EAAA+M,qBAAA,UAAAlV,IAAAgM,OAIA9Q,KAAAse,QACAte,KAAAue,UAAA,GAGAve,KAAA8O,QAAAlM,KAAA,KACA5C,KAAAwe,WACAxe,KAAAye,KAAA3N,KAIA9Q,MAGA0e,OAAA,WAMA,OALA1e,KAAAgL,OAAAhL,KAAAd,WACAc,KAAAd,UAAA,EACAyO,EAAA3N,KAAA6C,QAAAwF,IAGArI,MAGA2e,QAAA,WAMA,OALA3e,KAAAgL,QAAAhL,KAAAd,WACAc,KAAAd,UAAA,EACAkO,EAAApN,KAAA6C,QAAAwF,IAGArI,MAOA4e,QAAA,WACA,IAAA3R,EAAAjN,KAAAiN,QAEA,OAAAA,EAAA,SAIAA,EAAA,aAAAJ,EAEA7M,KAAAse,OAAAte,KAAAue,WACAtR,EAAAnI,IAAA9E,KAAA6e,aAGA7e,KAAAwe,WACAxe,MAVAA,MAmBAqd,KAAA,SAAAyB,GACA,IAAAC,EAAAzS,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,GAAAwS,EACAE,EAAAhf,KAAA4V,WACArU,EAAAyd,EAAAzd,KACAF,EAAA2d,EAAA3d,IACA,OAAArB,KAAAif,OAAAxT,EAAAqT,KAAAvd,EAAAvC,OAAA8f,GAAArT,EAAAsT,KAAA1d,EAAArC,OAAA+f,KASAE,OAAA,SAAAhC,GACA,IAAAC,EAAA5Q,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,GAAA2Q,EACArH,EAAA5V,KAAA4V,WACAqB,GAAA,EAoBA,OAnBAgG,EAAAje,OAAAie,GACAC,EAAAle,OAAAke,GAEAld,KAAAgL,QAAAhL,KAAAd,UAAAc,KAAA8O,QAAA9E,UACAsB,EAAA2R,KACArH,EAAArU,KAAA0b,EACAhG,GAAA,GAGA3L,EAAA4R,KACAtH,EAAAvU,IAAA6b,EACAjG,GAAA,GAGAA,GACAjX,KAAA8U,cAAA,IAIA9U,MASAoL,KAAA,SAAA2O,EAAAmF,GACA,IAAAtJ,EAAA5V,KAAA4V,WASA,OALAmE,GAHAA,EAAA/a,OAAA+a,IAEA,EACA,KAAAA,GAEA,EAAAA,EAGA/Z,KAAAmf,OAAAvJ,EAAA9U,MAAAiZ,EAAAnE,EAAAJ,aAAA,KAAA0J,IAUAC,OAAA,SAAApF,EAAAqF,EAAAF,GACA,IAAApQ,EAAA9O,KAAA8O,QACA8G,EAAA5V,KAAA4V,WACA9U,EAAA8U,EAAA9U,MACAD,EAAA+U,EAAA/U,OACA2U,EAAAI,EAAAJ,aACAC,EAAAG,EAAAH,cAGA,IAFAsE,EAAA/a,OAAA+a,KAEA,GAAA/Z,KAAAgL,QAAAhL,KAAAd,UAAA4P,EAAA3E,SAAA,CACA,IAAAyN,EAAApC,EAAAuE,EACAlC,EAAApC,EAAAsE,EAEA,IAIS,IAJTlK,EAAA7P,KAAAiN,QA/6EA,QAg7EA8M,QACAsF,SAAAve,EAAA0U,EACAiH,cAAAyC,IAEA,OAAAlf,KAGA,GAAAkf,EAAA,CACA,IAAA7C,EAAArc,KAAAqc,SACAtI,EAAA1D,EAAArQ,KAAA6C,SACA+G,EAAAyS,GAAA9d,OAAA4N,KAAAkQ,GAAA7V,OAhyDA,SAAA6V,GACA,IAAA7J,EAAA,EACAC,EAAA,EACA6M,EAAA,EAUA,OATApT,EAAAmQ,EAAA,SAAAkD,GACA,IAAA3M,EAAA2M,EAAA3M,OACAC,EAAA0M,EAAA1M,OACAL,GAAAI,EACAH,GAAAI,EACAyM,GAAA,KAKA9M,MAHAA,GAAA8M,EAIA7M,MAHAA,GAAA6M,GAoxDAE,CAAAnD,IACA7J,MAAA0M,EAAA1M,MACAC,MAAAyM,EAAAzM,OAGAmD,EAAArU,OAAAqW,EAAA9W,KAAA8I,EAAA4I,MAAAuB,EAAAxS,KAAAqU,EAAArU,MAAAT,GACA8U,EAAAvU,MAAAwW,EAAAhX,KAAA+I,EAAA6I,MAAAsB,EAAA1S,IAAAuU,EAAAvU,KAAAR,QACS+K,EAAAwT,IAAA9T,EAAA8T,EAAAnC,IAAA3R,EAAA8T,EAAAlC,IACTtH,EAAArU,OAAAqW,EAAA9W,KAAAse,EAAAnC,EAAArH,EAAArU,MAAAT,GACA8U,EAAAvU,MAAAwW,EAAAhX,KAAAue,EAAAlC,EAAAtH,EAAAvU,KAAAR,KAGA+U,EAAArU,OAAAqW,EAAA9W,GAAA,EACA8U,EAAAvU,MAAAwW,EAAAhX,GAAA,GAGA+U,EAAA9U,MAAA8W,EACAhC,EAAA/U,OAAAgX,EACA7X,KAAA8U,cAAA,GAGA,OAAA9U,MAQA0R,OAAA,SAAA2F,GACA,OAAArX,KAAAyD,UAAAzD,KAAAqV,UAAA3D,QAAA,GAAA1S,OAAAqY,KAQA5T,SAAA,SAAA4T,GAQA,OALA/L,EAFA+L,EAAArY,OAAAqY,KAEArX,KAAAgL,QAAAhL,KAAAd,UAAAc,KAAA8O,QAAA7E,YACAjK,KAAAqV,UAAA3D,OAAA2F,EAAA,IACArX,KAAA8U,cAAA,OAGA9U,MAQA2R,OAAA,SAAA8N,GACA,IAAA7N,EAAA5R,KAAAqV,UAAAzD,OACA,OAAA5R,KAAA0f,MAAAD,EAAAnU,EAAAsG,KAAA,IAQAA,OAAA,SAAA+N,GACA,IAAAhO,EAAA3R,KAAAqV,UAAA1D,OACA,OAAA3R,KAAA0f,MAAApU,EAAAqG,KAAA,EAAAgO,IASAD,MAAA,SAAA/N,GACA,IAAAC,EAAAtF,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,GAAAqF,EACA0D,EAAArV,KAAAqV,UACA6B,GAAA,EAoBA,OAnBAvF,EAAA3S,OAAA2S,GACAC,EAAA5S,OAAA4S,GAEA5R,KAAAgL,QAAAhL,KAAAd,UAAAc,KAAA8O,QAAA5E,WACAoB,EAAAqG,KACA0D,EAAA1D,SACAuF,GAAA,GAGA5L,EAAAsG,KACAyD,EAAAzD,SACAsF,GAAA,GAGAA,GACAlX,KAAA8U,cAAA,OAIA9U,MAQAmO,QAAA,WACA,IAKAvL,EALAgd,EAAAtT,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,IAAAA,UAAA,GACAwC,EAAA9O,KAAA8O,QACAuG,EAAArV,KAAAqV,UACAO,EAAA5V,KAAA4V,WACAS,EAAArW,KAAAqW,YAGA,GAAArW,KAAAgL,OAAAhL,KAAA+U,QAAA,CACAnS,GACAqa,EAAA5G,EAAA9U,KAAAqU,EAAArU,KACA2b,EAAA7G,EAAAhV,IAAAuU,EAAAvU,IACAP,MAAAuV,EAAAvV,MACAD,OAAAwV,EAAAxV,QAEA,IAAAkZ,EAAA1E,EAAAvU,MAAAuU,EAAAG,aAKA,GAJAtJ,EAAAtJ,EAAA,SAAA0Y,EAAA/U,GACA3D,EAAA2D,GAAA+U,EAAAvB,IAGA6F,EAAA,CAGA,IAAAhD,EAAAlb,KAAAC,MAAAiB,EAAAsa,EAAAta,EAAA/B,QACA8b,EAAAjb,KAAAC,MAAAiB,EAAAqa,EAAAra,EAAA9B,OACA8B,EAAAqa,EAAAvb,KAAAC,MAAAiB,EAAAqa,GACAra,EAAAsa,EAAAxb,KAAAC,MAAAiB,EAAAsa,GACAta,EAAA9B,MAAA6b,EAAA/Z,EAAAqa,EACAra,EAAA/B,OAAA+b,EAAAha,EAAAsa,QAGAta,GACAqa,EAAA,EACAC,EAAA,EACApc,MAAA,EACAD,OAAA,GAaA,OATAiO,EAAA7E,YACArH,EAAA8O,OAAA2D,EAAA3D,QAAA,GAGA5C,EAAA5E,WACAtH,EAAA+O,OAAA0D,EAAA1D,QAAA,EACA/O,EAAAgP,OAAAyD,EAAAzD,QAAA,GAGAhP,GAQA2L,QAAA,SAAA3L,GACA,IAAAkM,EAAA9O,KAAA8O,QACAuG,EAAArV,KAAAqV,UACAO,EAAA5V,KAAA4V,WACAS,KAEA,GAAArW,KAAAgL,QAAAhL,KAAAd,UAAA0M,EAAAhJ,GAAA,CACA,IAAAsU,GAAA,EAEApI,EAAA7E,WACAqB,EAAA1I,EAAA8O,SAAA9O,EAAA8O,SAAA2D,EAAA3D,SACA2D,EAAA3D,OAAA9O,EAAA8O,OACAwF,GAAA,GAIApI,EAAA5E,WACAoB,EAAA1I,EAAA+O,SAAA/O,EAAA+O,SAAA0D,EAAA1D,SACA0D,EAAA1D,OAAA/O,EAAA+O,OACAuF,GAAA,GAGA5L,EAAA1I,EAAAgP,SAAAhP,EAAAgP,SAAAyD,EAAAzD,SACAyD,EAAAzD,OAAAhP,EAAAgP,OACAsF,GAAA,IAIAA,GACAlX,KAAA8U,cAAA,MAGA,IAAAiF,EAAA1E,EAAAvU,MAAAuU,EAAAG,aAEAlK,EAAA1I,EAAAqa,KACA5G,EAAA9U,KAAAqB,EAAAqa,EAAAlD,EAAAnE,EAAArU,MAGA+J,EAAA1I,EAAAsa,KACA7G,EAAAhV,IAAAuB,EAAAsa,EAAAnD,EAAAnE,EAAAvU,KAGAiK,EAAA1I,EAAA9B,SACAuV,EAAAvV,MAAA8B,EAAA9B,MAAAiZ,GAGAzO,EAAA1I,EAAA/B,UACAwV,EAAAxV,OAAA+B,EAAA/B,OAAAkZ,GAGA/Z,KAAAub,eAAAlF,GAGA,OAAArW,MAOA6f,iBAAA,WACA,OAAA7f,KAAAgL,MAAAoB,KAAmCpM,KAAAkV,mBAOnC4K,aAAA,WACA,OAAA9f,KAAA+f,MAAA3T,KAAmCpM,KAAAqV,eAOnC8F,cAAA,WACA,IAAAvF,EAAA5V,KAAA4V,WACAhT,KAQA,OANA5C,KAAAgL,OACAkB,GAAA,uEAAAoP,GACA1Y,EAAA0Y,GAAA1F,EAAA0F,KAIA1Y,GAQAyY,cAAA,SAAAzY,GACA,IAAAgT,EAAA5V,KAAA4V,WACA7R,EAAA6R,EAAA7R,YAsBA,OApBA/D,KAAAgL,QAAAhL,KAAAd,UAAA0M,EAAAhJ,KACA0I,EAAA1I,EAAArB,QACAqU,EAAArU,KAAAqB,EAAArB,MAGA+J,EAAA1I,EAAAvB,OACAuU,EAAAvU,IAAAuB,EAAAvB,KAGAiK,EAAA1I,EAAA9B,QACA8U,EAAA9U,MAAA8B,EAAA9B,MACA8U,EAAA/U,OAAA+B,EAAA9B,MAAAiD,GACSuH,EAAA1I,EAAA/B,UACT+U,EAAA/U,OAAA+B,EAAA/B,OACA+U,EAAA9U,MAAA8B,EAAA/B,OAAAkD,GAGA/D,KAAA8U,cAAA,IAGA9U,MAOAob,eAAA,WACA,IACAxY,EADAyT,EAAArW,KAAAqW,YAYA,OATArW,KAAAgL,OAAAhL,KAAA+U,UACAnS,GACArB,KAAA8U,EAAA9U,KACAF,IAAAgV,EAAAhV,IACAP,MAAAuV,EAAAvV,MACAD,OAAAwV,EAAAxV,SAIA+B,OAQA2Y,eAAA,SAAA3Y,GACA,IAEAod,EACAC,EAHA5J,EAAArW,KAAAqW,YACAtS,EAAA/D,KAAA8O,QAAA/K,YAkCA,OA9BA/D,KAAAgL,OAAAhL,KAAA+U,UAAA/U,KAAAd,UAAA0M,EAAAhJ,KACA0I,EAAA1I,EAAArB,QACA8U,EAAA9U,KAAAqB,EAAArB,MAGA+J,EAAA1I,EAAAvB,OACAgV,EAAAhV,IAAAuB,EAAAvB,KAGAiK,EAAA1I,EAAA9B,QAAA8B,EAAA9B,QAAAuV,EAAAvV,QACAkf,GAAA,EACA3J,EAAAvV,MAAA8B,EAAA9B,OAGAwK,EAAA1I,EAAA/B,SAAA+B,EAAA/B,SAAAwV,EAAAxV,SACAof,GAAA,EACA5J,EAAAxV,OAAA+B,EAAA/B,QAGAkD,IACAic,EACA3J,EAAAxV,OAAAwV,EAAAvV,MAAAiD,EACWkc,IACX5J,EAAAvV,MAAAuV,EAAAxV,OAAAkD,IAIA/D,KAAAgV,iBAGAhV,MAQAsD,iBAAA,WACA,IAAAwL,EAAAxC,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,MAEA,IAAAtM,KAAAgL,QAAAnD,OAAAqY,kBACA,YAGA,IAAAtK,EAAA5V,KAAA4V,WACAuK,EA1iEA,SAAArd,EAAAsd,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAArc,YACAyc,EAAAJ,EAAA5K,aACAiL,EAAAL,EAAA3K,cACAiL,EAAAN,EAAA1O,OACAA,OAAA,IAAAgP,EAAA,EAAAA,EACAC,EAAAP,EAAAzO,OACAA,OAAA,IAAAgP,EAAA,EAAAA,EACAC,EAAAR,EAAAxO,OACAA,OAAA,IAAAgP,EAAA,EAAAA,EACA7c,EAAAsc,EAAAtc,YACAyR,EAAA6K,EAAA7K,aACAC,EAAA4K,EAAA5K,cACAoL,EAAAP,EAAAQ,UACAA,OAAA,IAAAD,EAAA,cAAAA,EACAE,EAAAT,EAAAU,sBACAA,OAAA,IAAAD,KACAE,EAAAX,EAAAY,sBACAA,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAb,EAAA7J,SACAA,OAAA,IAAA0K,EAAA3V,IAAA2V,EACAC,EAAAd,EAAA5J,UACAA,OAAA,IAAA0K,EAAA5V,IAAA4V,EACAC,EAAAf,EAAA/J,SACAA,OAAA,IAAA8K,EAAA,EAAAA,EACAC,EAAAhB,EAAA9J,UACAA,OAAA,IAAA8K,EAAA,EAAAA,EACAvJ,EAAA/P,SAAA2Q,cAAA,UACA4I,EAAAxJ,EAAAyJ,WAAA,MACAC,EAAA3O,IACA/O,cACAjD,MAAA2V,EACA5V,OAAA6V,IAEAgL,EAAA5O,IACA/O,cACAjD,MAAAyV,EACA1V,OAAA2V,GACK,SACL1V,EAAAY,KAAA3C,IAAA0iB,EAAA3gB,MAAAY,KAAAlC,IAAAkiB,EAAA5gB,MAAA0U,IACA3U,EAAAa,KAAA3C,IAAA0iB,EAAA5gB,OAAAa,KAAAlC,IAAAkiB,EAAA7gB,OAAA4U,IAGAkM,EAAA7O,IACA/O,YAAAwc,EACAzf,MAAA2V,EACA5V,OAAA6V,IAEAkL,EAAA9O,IACA/O,YAAAwc,EACAzf,MAAAyV,EACA1V,OAAA2V,GACK,SACLqL,EAAAngB,KAAA3C,IAAA4iB,EAAA7gB,MAAAY,KAAAlC,IAAAoiB,EAAA9gB,MAAA0f,IACAsB,EAAApgB,KAAA3C,IAAA4iB,EAAA9gB,OAAAa,KAAAlC,IAAAoiB,EAAA/gB,OAAA4f,IACAsB,IAAAF,EAAA,GAAAC,EAAA,EAAAD,EAAAC,GAeA,OAdA/J,EAAAjX,MAAA6L,EAAA7L,GACAiX,EAAAlX,OAAA8L,EAAA9L,GACA0gB,EAAAS,UAAAlB,EACAS,EAAAU,SAAA,IAAAnhB,EAAAD,GACA0gB,EAAAW,OACAX,EAAAY,UAAArhB,EAAA,EAAAD,EAAA,GACA0gB,EAAA7P,SAAAhQ,KAAA6V,GAAA,KACAgK,EAAA7B,MAAA/N,EAAAC,GACA2P,EAAAP,wBACAO,EAAAL,wBACAK,EAAAa,UAAAxS,MAAA2R,GAAAze,GAAAsF,OAAArB,EAAAgb,EAAAM,IAAA,SAAAC,GACA,OAAA5gB,KAAA6gB,MAAA5V,EAAA2V,SAEAf,EAAAhY,UACAwO,EAo+DAyK,CAAAxiB,KAAA8C,MAAA9C,KAAAqV,UAAAO,EAAA9G,GAEA,IAAA9O,KAAA+U,QACA,OAAAoL,EAGA,IAAAsC,EAAAziB,KAAAmO,UACAuU,EAAAD,EAAAxF,EACA0F,EAAAF,EAAAvF,EACA0F,EAAAH,EAAA3hB,MACA+hB,EAAAJ,EAAA5hB,OAEAkZ,EAAAoG,EAAArf,MAAAY,KAAA6gB,MAAA3M,EAAAJ,cAEA,IAAAuE,IACA2I,GAAA3I,EACA4I,GAAA5I,EACA6I,GAAA7I,EACA8I,GAAA9I,GAGA,IAAAhW,EAAA6e,EAAAC,EACApB,EAAA3O,IACA/O,cACAjD,MAAAgO,EAAA2H,UAAAjL,IACA3K,OAAAiO,EAAA4H,WAAAlL,MAEAkW,EAAA5O,IACA/O,cACAjD,MAAAgO,EAAAyH,UAAA,EACA1V,OAAAiO,EAAA0H,WAAA,GACO,SAEPF,EAAAxD,IACA/O,cACAjD,MAAAgO,EAAAhO,QAAA,IAAAiZ,EAAAoG,EAAArf,MAAA8hB,GACA/hB,OAAAiO,EAAAjO,SAAA,IAAAkZ,EAAAoG,EAAAtf,OAAAgiB,KAEA/hB,EAAAwV,EAAAxV,MACAD,EAAAyV,EAAAzV,OAEAC,EAAAY,KAAA3C,IAAA0iB,EAAA3gB,MAAAY,KAAAlC,IAAAkiB,EAAA5gB,UACAD,EAAAa,KAAA3C,IAAA0iB,EAAA5gB,OAAAa,KAAAlC,IAAAkiB,EAAA7gB,WACA,IAAAkX,EAAA/P,SAAA2Q,cAAA,UACA4I,EAAAxJ,EAAAyJ,WAAA,MACAzJ,EAAAjX,MAAA6L,EAAA7L,GACAiX,EAAAlX,OAAA8L,EAAA9L,GACA0gB,EAAAS,UAAAlT,EAAAgS,WAAA,cACAS,EAAAU,SAAA,IAAAnhB,EAAAD,GACA,IAAAiiB,EAAAhU,EAAAkS,sBACAA,OAAA,IAAA8B,KACA5B,EAAApS,EAAAoS,sBACAK,EAAAP,wBAEAE,IACAK,EAAAL,yBAIA,IAKA6B,EACAC,EAEAC,EACAC,EACAC,EACAC,EAXAC,EAAAlD,EAAArf,MACAwiB,EAAAnD,EAAAtf,OAEA0iB,EAAAb,EACAc,EAAAb,EASAY,IAAAX,GAAAW,EAAAF,GACAE,EAAA,EACAR,EAAA,EACAE,EAAA,EACAE,EAAA,GACOI,GAAA,GACPN,GAAAM,EACAA,EAAA,EAEAJ,EADAJ,EAAArhB,KAAA3C,IAAAskB,EAAAT,EAAAW,IAEOA,GAAAF,IACPJ,EAAA,EAEAE,EADAJ,EAAArhB,KAAA3C,IAAA6jB,EAAAS,EAAAE,IAIAR,GAAA,GAAAS,IAAAX,GAAAW,EAAAF,GACAE,EAAA,EACAR,EAAA,EACAE,EAAA,EACAE,EAAA,GACOI,GAAA,GACPN,GAAAM,EACAA,EAAA,EAEAJ,EADAJ,EAAAthB,KAAA3C,IAAAukB,EAAAT,EAAAW,IAEOA,GAAAF,IACPJ,EAAA,EAEAE,EADAJ,EAAAthB,KAAA3C,IAAA8jB,EAAAS,EAAAE,IAIA,IAAAzB,GAAAwB,EAAAC,EAAAT,EAAAC,GAEA,GAAAG,EAAA,GAAAC,EAAA,GACA,IAAA1D,EAAA5e,EAAA8hB,EACAb,EAAA/P,KAAAiR,EAAAvD,EAAAwD,EAAAxD,EAAAyD,EAAAzD,EAAA0D,EAAA1D,GAQA,OAHA6B,EAAAa,UAAAxS,MAAA2R,GAAApB,GAAA/X,OAAArB,EAAAgb,EAAAM,IAAA,SAAAC,GACA,OAAA5gB,KAAA6gB,MAAA5V,EAAA2V,SAEAvK,GAQA0L,eAAA,SAAA1f,GACA,IAAA+K,EAAA9O,KAAA8O,QAeA,OAbA9O,KAAAd,UAAAuM,EAAA1H,KAEA+K,EAAA/K,YAAArC,KAAAlC,IAAA,EAAAuE,IAAAsF,IAEArJ,KAAAgL,QACAhL,KAAA6U,cAEA7U,KAAA+U,SACA/U,KAAAgV,kBAKAhV,MAQAwb,YAAA,SAAAkI,GACA,IAAA5U,EAAA9O,KAAA8O,QACA2M,EAAAzb,KAAAyb,QACAnD,EAAAtY,KAAAsY,KAEA,GAAAtY,KAAAgL,QAAAhL,KAAAd,SAAA,CACA,IAAAykB,EA98FA,SA88FAD,EACA1Z,EAAA8E,EAAA9E,SA98FA,SA88FA0Z,EACAA,EAAAC,GAAA3Z,EAAA0Z,EA98FA,OA+8FA5U,EAAA7K,SAAAyf,EACAnV,EAAAkN,EAAA9S,EAAA+a,GACA5V,EAAA2N,EAAAtT,EAAAwb,GACA7V,EAAA2N,EAAA/S,EAAAsB,GAEA8E,EAAAvE,iBAEAgE,EAAA+J,EAAA3P,EAAA+a,GACA5V,EAAAwK,EAAAnQ,EAAAwb,GACA7V,EAAAwK,EAAA5P,EAAAsB,IAIA,OAAAhK,OAIA4jB,GAAA9b,EAAA+b,QAEAA,GAEA,WAMA,SAAAA,EAAA5W,GACA,IAAA6B,EAAAxC,UAAA9F,OAAA,QAAAqG,IAAAP,UAAA,GAAAA,UAAA,MAIA,GAzjGA,SAAAwX,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAArc,UAAA,qCAqjGAsc,CAAAhkB,KAAA6jB,IAEA5W,IAAA/D,EAAA4D,KAAAG,EAAAgX,SACA,UAAAC,MAAA,4EAGAlkB,KAAAiN,UACAjN,KAAA8O,QAAA1C,KAA8BjD,EAAAyC,EAAAkD,OAC9B9O,KAAA+U,SAAA,EACA/U,KAAAd,UAAA,EACAc,KAAAqc,YACArc,KAAAgL,OAAA,EACAhL,KAAAmkB,WAAA,EACAnkB,KAAAue,UAAA,EACAve,KAAA+f,OAAA,EACA/f,KAAAokB,QAAA,EACApkB,KAAAqkB,OAvjGA,IAAAN,EAAAO,EAAAC,EAu6GA,OAv6GAR,EA0jGAF,EA1jGAU,IAs5GAzd,IAAA,aACA7H,MAAA,WAEA,OADA4I,OAAAgc,QAAAD,GACAC,KAQA/c,IAAA,cACA7H,MAAA,SAAA6P,GACA1C,EAAAjD,EAAAyC,EAAAkD,WAn6GAwV,IA2jGAxd,IAAA,OACA7H,MAAA,WACA,IAEA6R,EAFA7D,EAAAjN,KAAAiN,QACAgX,EAAAhX,EAAAgX,QAAA/V,cAGA,IAAAjB,EAAA,SAMA,GAFAA,EAAA,QAAAjN,KAEA,QAAAikB,EAAA,CAMA,GALAjkB,KAAAse,OAAA,EAEAxN,EAAA7D,EAAAqB,aAAA,WACAtO,KAAA6e,YAAA/N,GAEAA,EACA,OAIAA,EAAA7D,EAAAnI,QACS,WAAAmf,GAAApc,OAAAqY,oBACTpP,EAAA7D,EAAA1J,aAGAvD,KAAAye,KAAA3N,OAGAhK,IAAA,OACA7H,MAAA,SAAA6R,GACA,IAAA6K,EAAA3b,KAEA,GAAA8Q,EAAA,CAIA9Q,KAAA8Q,MACA9Q,KAAAqV,aACA,IAAApI,EAAAjN,KAAAiN,QACA6B,EAAA9O,KAAA8O,QAOA,GALAA,EAAA7E,WAAA6E,EAAA5E,WACA4E,EAAArF,kBAAA,GAIAqF,EAAArF,kBAAA5B,OAAA2c,YAMA,GAAAvb,EAAA6D,KAAAgE,GACA9Q,KAAAykB,MA9sEAC,EA8sEA5T,EA9sEAjD,QAAAuF,GAAA,IACAuR,EAAAC,KAAAF,GACApR,EAAA,IAAAkR,YAAAG,EAAAne,QAEA0F,EADA2Y,EAAA,IAAAC,WAAAxR,GACA,SAAArU,EAAAsH,GACAse,EAAAte,GAAAoe,EAAAI,WAAAxe,KAEA+M,QAssEA,CA9sEA,IACAoR,EACAC,EACArR,EACAuR,EA+sEAG,EAAA,IAAAC,eACAC,EAAAllB,KAAAklB,MAAAhL,KAAAla,MACAA,KAAAmkB,WAAA,EACAnkB,KAAAglB,MAKAA,EAAAG,QAAAD,EACAF,EAAAI,QAAAF,EACAF,EAAAK,UAAAH,EAEAF,EAAAM,WAAA,WAvjGA,eAwjGAN,EAAAO,kBAAA,iBACAP,EAAAQ,SAIAR,EAAAS,OAAA,WACA9J,EAAA8I,KAAAO,EAAAU,WAGAV,EAAAW,UAAA,WACAhK,EAAAwI,WAAA,EACAxI,EAAAqJ,IAAA,MAIAlW,EAAAtF,kBAAAqH,GAAAC,IAAA7D,EAAAwL,cACA3H,EAAAM,GAAAN,IAGAkU,EAAAY,KAAA,MAAA9U,GACAkU,EAAAa,aAAA,cACAb,EAAAc,gBAAA,oBAAA7Y,EAAAwL,YACAuM,EAAAe,YA7CA/lB,KAAAklB,YAgDApe,IAAA,OACA7H,MAAA,SAAAqU,GACA,IAAAxE,EAAA9O,KAAA8O,QACAuG,EAAArV,KAAAqV,UAGA9B,EAAAF,GAAAC,GACA5B,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,GAAA2B,EAAA,GAEAvT,KAAA8Q,IArvEA,SAAAwC,EAAA0S,GAMA,IALA,IAAAC,KAGApB,EAAA,IAAAC,WAAAxR,GAEAuR,EAAAre,OAAA,GAGAyf,EAAAjU,KAAAmB,GAAAvD,MAAA,KAAA3D,EAAA4Y,EAAAqB,SAAA,EANA,SAOArB,IAAAqB,SAPA,MAUA,cAAA9d,OAAA4d,EAAA,YAAsC5d,OAAA+d,KAAAF,EAAA/T,KAAA,MAwuEtCkU,CAAA9S,EA9lGA,cAgmGA,IAAA+S,EAlpEA,SAAA9S,GACA,IAAA7B,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,OAAA2B,GAEA,OACA5B,GAAA,EACA,MAGA,OACAD,GAAA,IACA,MAGA,OACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACA,MAGA,OACAA,EAAA,GACAC,GAAA,EACA,MAGA,OACAD,GAAA,GAMA,OACAA,SACAC,SACAC,UAimEA0U,CAAA/S,GAEA7B,EAAA2U,EAAA3U,OACAC,EAAA0U,EAAA1U,OACAC,EAAAyU,EAAAzU,OAGA9C,EAAA7E,YACAoL,EAAA3D,UAGA5C,EAAA5E,WACAmL,EAAA1D,SACA0D,EAAAzD,UAGA5R,KAAAklB,WAGApe,IAAA,QACA7H,MAAA,WACA,IAEAwZ,EACAC,EAHAzL,EAAAjN,KAAAiN,QACA6D,EAAA9Q,KAAA8Q,IAIA9Q,KAAA8O,QAAAtF,kBAAAqH,GAAAC,MACA2H,EAAAxL,EAAAwL,eAGAA,EAAA,aAIAC,EAAAtH,GAAAN,IAGA9Q,KAAAyY,cACAzY,KAAA0Y,iBACA,IAAA5V,EAAAkF,SAAA2Q,cAAA,OAEAF,IACA3V,EAAA2V,eAGA3V,EAAAgC,IAAA4T,GAAA5H,EACA9Q,KAAA8C,QACAA,EAAA2iB,OAAAzlB,KAAAiU,MAAAiG,KAAAla,MACA8C,EAAAsiB,QAAAplB,KAAAumB,KAAArM,KAAAla,MACAoN,EAAAtK,EAAAyF,GACA0E,EAAAuZ,WAAAC,aAAA3jB,EAAAmK,EAAAyZ,gBAGA5f,IAAA,QACA7H,MAAA,WACA,IAAA0nB,EAAA3mB,KAEA8C,EAAA9C,KAAAse,MAAAte,KAAAiN,QAAAjN,KAAA8C,MACAA,EAAA2iB,OAAA,KACA3iB,EAAAsiB,QAAA,KACAplB,KAAAokB,QAAA,EACA,IAAAwC,EAAA9e,EAAA+e,WAAA,mCAAA/Z,KAAAhF,EAAA+e,UAAAC,WAEAC,EAAA,SAAAvR,EAAAC,GACArJ,EAAAua,EAAAtR,WACAG,eACAC,gBACA1R,YAAAyR,EAAAC,IAEAkR,EAAAvC,QAAA,EACAuC,EAAA5G,OAAA,EAEA4G,EAAAK,SAIA,IAAAlkB,EAAA0S,cAAAoR,EAAA,CAKA,IAAAK,EAAAjf,SAAA2Q,cAAA,OACAuO,EAAAlf,SAAAkf,MAAAlf,SAAAC,gBACAjI,KAAAinB,cAEAA,EAAAxB,OAAA,WACAsB,EAAAE,EAAAnmB,MAAAmmB,EAAApmB,QAEA+lB,GACAM,EAAAC,YAAAF,IAIAA,EAAAniB,IAAAhC,EAAAgC,IAGA8hB,IACAK,EAAAllB,MAAAwX,QAAA,uJACA2N,EAAArO,YAAAoO,SArBAF,EAAAjkB,EAAA0S,aAAA1S,EAAA2S,kBAyBA3O,IAAA,OACA7H,MAAA,WACA,IAAA6D,EAAA9C,KAAA8C,MACAA,EAAA2iB,OAAA,KACA3iB,EAAAsiB,QAAA,KACAtiB,EAAA0jB,WAAAW,YAAArkB,GACA9C,KAAA8C,MAAA,QAGAgE,IAAA,QACA7H,MAAA,WACA,GAAAe,KAAA+f,QAAA/f,KAAAgL,MAAA,CAIA,IAAAiC,EAAAjN,KAAAiN,QACA6B,EAAA9O,KAAA8O,QACAhM,EAAA9C,KAAA8C,MAEAmS,EAAAhI,EAAAuZ,WACAY,EAAApf,SAAA2Q,cAAA,OACAyO,EAAA9N,UAxoGA,orCAyoGA,IAAAzW,EAAAukB,EAAAlO,cAAA,IAAA9Q,OA1wGA,UA0wGA,eACA2P,EAAAlV,EAAAqW,cAAA,IAAA9Q,OA3wGA,UA2wGA,YACAqT,EAAA5Y,EAAAqW,cAAA,IAAA9Q,OA5wGA,UA4wGA,cACAmQ,EAAA1V,EAAAqW,cAAA,IAAA9Q,OA7wGA,UA6wGA,cACAkQ,EAAAC,EAAAW,cAAA,IAAA9Q,OA9wGA,UA8wGA,UACApI,KAAAiV,YACAjV,KAAA6C,UACA7C,KAAA+X,SACA/X,KAAAyb,UACAzb,KAAAuY,UACAvY,KAAA4Y,QAAA/V,EAAAqW,cAAA,IAAA9Q,OApxGA,UAoxGA,cACApI,KAAAsY,OACAP,EAAAc,YAAA/V,GAEAsK,EAAAH,EAAA3E,GAEA2M,EAAAwR,aAAA5jB,EAAAoK,EAAAyZ,aAEA1mB,KAAAse,OACA3Q,EAAA7K,EAAAyF,GAGAvI,KAAAwY,cACAxY,KAAAka,OACApL,EAAA1F,mBAAA1H,KAAAlC,IAAA,EAAAsP,EAAA1F,qBAAAC,IACAyF,EAAA/K,YAAArC,KAAAlC,IAAA,EAAAsP,EAAA/K,cAAAsF,IACAyF,EAAA9K,SAAAtC,KAAAlC,IAAA,EAAAkC,KAAA3C,IAAA,EAAA2C,KAAAC,MAAAmN,EAAA9K,aAAA,EACAoJ,EAAAmL,EAAAjQ,GAEAwG,EAAAnF,QACAyD,EAAAmL,EAAA8O,uBAAA,GAAAjf,OAxyGA,UAwyGA,YAAAE,GAGAwG,EAAAlF,QACAwD,EAAAmL,EAAA8O,uBAAA,GAAAjf,OA5yGA,UA4yGA,YAAAE,GAGAwG,EAAA9M,YACAoL,EAAAvK,EAAA,GAAAuF,OAhzGA,UAgzGA,QAGA0G,EAAAjF,WACAuD,EAAAkL,EAAA9P,GAGAsG,EAAAvE,iBACA6C,EAAAkL,EAAA5P,GACA6F,EAAA+J,EAAA3P,EAvzGA,QA0zGAmG,EAAAtE,mBACA4C,EAAAmL,EAAA8O,uBAAA,GAAAjf,OA7zGA,UA6zGA,UAAAE,GACA8E,EAAAmL,EAAA8O,uBAAA,GAAAjf,OA9zGA,UA8zGA,WAAAE,IAGAtI,KAAA4B,SACA5B,KAAAgL,OAAA,EACAhL,KAAAwb,YAAA1M,EAAA7K,UAEA6K,EAAAhF,UACA9J,KAAAmE,OAGAnE,KAAAuO,QAAAO,EAAAlM,MAEAmJ,EAAA+C,EAAA9D,QACAuE,EAAAtC,EAnyGA,QAmyGA6B,EAAA9D,OACA4D,MAAA,IAIAiB,EAAA5C,EAxyGA,aA2yGAnG,IAAA,UACA7H,MAAA,WACAe,KAAAgL,QAIAhL,KAAAgL,OAAA,EACAhL,KAAAib,SACAjb,KAAAwZ,eACAxZ,KAAA6C,QAAA2jB,WAAAW,YAAAnnB,KAAA6C,SACA8K,EAAA3N,KAAAiN,QAAA3E,OAGAxB,IAAA,WACA7H,MAAA,WACAe,KAAAgL,OACAhL,KAAAsnB,UACAtnB,KAAAgL,OAAA,EACAhL,KAAA+U,SAAA,GACS/U,KAAAokB,QACTpkB,KAAAinB,YAAAxB,OAAA,KACAzlB,KAAAokB,QAAA,EACApkB,KAAA+f,OAAA,GACS/f,KAAAmkB,WACTnkB,KAAAglB,IAAAG,QAAA,KACAnlB,KAAAglB,IAAAQ,SACSxlB,KAAA8C,OACT9C,KAAAumB,YA54GAlgB,EAAA0d,EAAA3d,UAAAke,GACAC,GAAAle,EAAA0d,EAAAQ,GAq6GAV,EAzYA,GA8YA,OAFAzX,EAAAyX,GAAAzd,UAAAxE,GAAAsC,GAAA+V,GAAAiB,GAAA/V,GAAAtF,IAEAgkB,IA/8G8D0D,EAAAC,QAAA1hB","file":"static/js/12.c5a5e721f9b6f3a0b313.js","sourcesContent":["import { use } from '../utils';\nimport { TouchMixin } from '../mixins/touch';\nimport { preventDefault } from '../utils/event';\n\nvar _use = use('slider'),\n    sfc = _use[0],\n    bem = _use[1];\n\nexport default sfc({\n  mixins: [TouchMixin],\n  props: {\n    min: Number,\n    value: Number,\n    disabled: Boolean,\n    vertical: Boolean,\n    activeColor: String,\n    inactiveColor: String,\n    max: {\n      type: Number,\n      \"default\": 100\n    },\n    step: {\n      type: Number,\n      \"default\": 1\n    },\n    barHeight: {\n      type: String,\n      \"default\": '2px'\n    }\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      if (this.disabled) return;\n      this.touchStart(event);\n      this.startValue = this.format(this.value);\n    },\n    onTouchMove: function onTouchMove(event) {\n      preventDefault(event, true);\n      if (this.disabled) return;\n      this.touchMove(event);\n      var rect = this.$el.getBoundingClientRect();\n      var delta = this.vertical ? this.deltaY : this.deltaX;\n      var total = this.vertical ? rect.height : rect.width;\n      var diff = delta / total * 100;\n      this.newValue = this.startValue + diff;\n      this.updateValue(this.newValue);\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (this.disabled) return;\n      this.updateValue(this.newValue, true);\n    },\n    onClick: function onClick(event) {\n      event.stopPropagation();\n      if (this.disabled) return;\n      var rect = this.$el.getBoundingClientRect();\n      var delta = this.vertical ? event.clientY - rect.top : event.clientX - rect.left;\n      var total = this.vertical ? rect.height : rect.width;\n      var value = delta / total * 100;\n      this.updateValue(value, true);\n    },\n    updateValue: function updateValue(value, end) {\n      value = this.format(value);\n      this.$emit('input', value);\n\n      if (end) {\n        this.$emit('change', value);\n      }\n    },\n    format: function format(value) {\n      return Math.round(Math.max(this.min, Math.min(value, this.max)) / this.step) * this.step;\n    }\n  },\n  render: function render(h) {\n    var _barStyle;\n\n    var vertical = this.vertical;\n    var style = {\n      background: this.inactiveColor\n    };\n    var mainAxis = vertical ? 'height' : 'width';\n    var crossAxis = vertical ? 'width' : 'height';\n    var barStyle = (_barStyle = {}, _barStyle[mainAxis] = this.format(this.value) + \"%\", _barStyle[crossAxis] = this.barHeight, _barStyle.background = this.activeColor, _barStyle);\n    return h(\"div\", {\n      \"style\": style,\n      \"class\": bem({\n        disabled: this.disabled,\n        vertical: vertical\n      }),\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(\"div\", {\n      \"class\": bem('bar'),\n      \"style\": barStyle\n    }, [h(\"div\", {\n      \"class\": bem('button-wrapper'),\n      \"on\": {\n        \"touchstart\": this.onTouchStart,\n        \"touchmove\": this.onTouchMove,\n        \"touchend\": this.onTouchEnd,\n        \"touchcancel\": this.onTouchEnd\n      }\n    }, [this.slots('button') || h(\"div\", {\n      \"class\": bem('button')\n    })])])]);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vant@1.6.19@vant/es/slider/index.js\n// module id = null\n// module chunks = ","<template>\r\n\t<div class=\"cropper-wrap\">\r\n\t  <div class=\"img-container\">\r\n\t    <img ref=\"image\" id=\"image\"  :src=\"imgsrc\">\r\n\t  </div>\r\n\t  <div class=\"cropper-bottom\">\r\n\t  \t  <div class=\"range\">\r\n\t  \t  \t<li>旋转角度：{{angle}}°</li>\r\n\t  \t  \t<van-slider v-model=\"val\" :step=\"5\" active-color=\"#e6292c\" :min=\"0\" :max=\"100\" @change=\"rotation\" />\r\n\t  \t  </div>\r\n\t\t  <div class=\"small\"></div>\r\n\t\t  <div class=\"handler-area\">\r\n\t\t\t  <button ref=\"cancel\" @click=\"cancel\">关闭</button>\r\n\t\t\t  <button ref=\"crop\" @click=\"clip\">确认</button>\r\n\t\t  </div>\r\n\t  </div>\r\n  </div>\r\n\r\n</script>\r\n  \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'cropperjs/dist/cropper.css';\r\nimport Cropper from 'cropperjs';\r\nimport { Slider } from 'vant';\r\n\r\n\r\nexport default {\r\n  props:['imgsrc'],\r\n  data (){\r\n    return {\r\n      cropper:\"\",\r\n      image:'',\r\n      val:50\r\n    }\r\n  },\r\n  components:{\r\n  \tvanSlider:Slider\r\n  },\r\n  computed:{\r\n  \tangle(){\r\n  \t\treturn -180+this.val*3.6;\r\n  \t}\r\n  },\r\n  methods: {\r\n    clip(){\r\n         var res= this.cropper.getCroppedCanvas({\r\n          width:200,\r\n          height:200\r\n         });\r\n         var zhi=res.toDataURL();\r\n         this.$emit(\"confirm\",zhi)\r\n    },\r\n    rotation(value){\r\n      this.val=value;\r\n      this.cropper.rotateTo(this.angle);\r\n    },\r\n    cancel(){\r\n    \tthis.$emit(\"close\")\r\n    }\r\n  },\r\n\r\n  mounted: function() {\r\n    this.image=this.$refs['image']\r\n    this.cropper = new Cropper(this.image, {\r\n      aspectRatio: 1,\r\n      viewMode:3,\r\n      dragMode:\"move\",\r\n      // cropBoxResizable:false,\r\n      // autoCropArea:0.3,\r\n      // cropBoxMovable:false,\r\n      preview:\".small\", \r\n      crop(event) {\r\n\r\n      }\r\n    });\r\n    \r\n\r\n  }\r\n}\r\n</script>\r\n<style>\r\n  .cropper-point,.cropper-line{\r\n    background: #e6292c !important;\r\n  }\r\n  .cropper-view-box {\r\n    outline: 1px solid #e6292c !important;\r\n    outline-color: rgba(255, 0, 0, 0.75) !important;\r\n  }\r\n</style>\r\n<style  scoped>\r\n.small{\r\n  overflow: hidden;\r\n  float: left;\r\n  width: 16vh !important;\r\n  height: 16vh !important;\r\n}\r\n.range{\r\n\theight: 8vh;\r\n}\r\n.range li{\r\n\tline-height: 30px;\r\n}\r\n#image {\r\n  max-width:100%; \r\n  max-height:70vh;/* This rule is very important, please do not ignore this! */\r\n}\r\n.img-container{\r\n\tposition: relative;\r\n\tmax-height: 70vh;\r\n}\r\n\r\n.cropper-wrap{\r\n\tposition: fixed;\r\n\tleft: 0px;\r\n\ttop:0px;\r\n\tbottom: 0;\r\n\tright: 0;\r\n\tbackground: #000;\r\n\tz-index: 100;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\talign-items: flex-start;\r\n\tjustify-content: center;\r\n}\r\n\r\n.cropper-bottom{\r\n\talign-self: flex-end;\r\n\theight: 26vh;\r\n\tbox-sizing: border-box;\r\n\tmargin: 0px 20px;\r\n\twidth: calc(100% - 40px);\r\n}\r\n.handler-area{\r\n\toverflow: hidden;\r\n}\r\n.handler-area button{\r\n\tfont-size: 20px;\r\n\tbackground: transparent;\r\n\tcolor: #e8e8e8;\r\n\theight: 8vh;\r\n\tline-height: 8vh;\r\n\ttext-align: center;\r\n\tdisplay: block;\r\n\tbox-sizing: border-box;\r\n\twidth: 100%;\r\n}\r\n.handler-area button:nth-child(1){\r\n\tcolor: #aaa;\r\n}\r\n\r\n\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/User/cropper.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cropper-wrap\"},[_c('div',{staticClass:\"img-container\"},[_c('img',{ref:\"image\",attrs:{\"id\":\"image\",\"src\":_vm.imgsrc}})]),_vm._v(\" \"),_c('div',{staticClass:\"cropper-bottom\"},[_c('div',{staticClass:\"range\"},[_c('li',[_vm._v(\"旋转角度：\"+_vm._s(_vm.angle)+\"°\")]),_vm._v(\" \"),_c('van-slider',{attrs:{\"step\":5,\"active-color\":\"#e6292c\",\"min\":0,\"max\":100},on:{\"change\":_vm.rotation},model:{value:(_vm.val),callback:function ($$v) {_vm.val=$$v},expression:\"val\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"small\"}),_vm._v(\" \"),_c('div',{staticClass:\"handler-area\"},[_c('button',{ref:\"cancel\",on:{\"click\":_vm.cancel}},[_vm._v(\"关闭\")]),_vm._v(\" \"),_c('button',{ref:\"crop\",on:{\"click\":_vm.clip}},[_vm._v(\"确认\")])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-6cace9cb\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"audio\":\"src\",\"source\":\"src\",\"img\":[\"src\",\"data-src\"],\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/pages/User/cropper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6cace9cb\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./cropper.vue\")\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6cace9cb\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=1!./cropper.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./cropper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./cropper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6cace9cb\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"audio\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":[\\\"src\\\",\\\"data-src\\\"],\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./cropper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6cace9cb\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/User/cropper.vue\n// module id = null\n// module chunks = ","/*!\n * Cropper.js v1.5.2\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-06-30T06:01:05.296Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Read ArrayBuffer from Data URL of JPEG images directly for better performance.\n\n\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /^(?:.(?!chrome|android))*safari/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_cropperjs@1.5.2@cropperjs/dist/cropper.js\n// module id = kddg\n// module chunks = 2 12"],"sourceRoot":""}